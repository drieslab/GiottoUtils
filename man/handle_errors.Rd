% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval_handle.R
\name{handle_errors}
\alias{handle_errors}
\title{Error handling}
\usage{
handle_errors(expr, prefix = "")
}
\arguments{
\item{expr}{expression to evaluate}

\item{prefix}{string. An optional prefix to add before the error to help
report where it was from.}
}
\value{
Throws an error without processing stop calls.
}
\description{
Some errors may lock up the console for much longer than they should. This
can often be because R has difficulty figuring out the callstack to generate
the error message. This function is a simple wrapper to set up a tryCatch
evaluation that will return all enclosed errors with the \code{stop()} arg
\code{call. = FALSE} setting.
}
\examples{
x <- function() {
    handle_errors(stop("this is an error"))
}
if (FALSE) {
    x()
}

y <- function() {
    handle_errors(
        stop("this is an error"),
        prefix = "error location:"
    )
}
if (FALSE) {
    y()
}
}
