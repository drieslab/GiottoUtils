[{"path":"https://drieslab.github.io/GiottoUtils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 GiottoUtils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/articles/print_formatting.html","id":"relevant-options","dir":"Articles","previous_headings":"","what":"Relevant Options","title":"Console Printing","text":"","code":"options(\"giotto.verbose\") options(\"giotto.logdir\") options(\"giotto.last_logpath\")"},{"path":"https://drieslab.github.io/GiottoUtils/articles/print_formatting.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Console Printing","text":"Diagnostic prints R vital communicating users developers function may going wrong. GiottoUtils exports collection utility functions facilitate pretty printing readability. several types console printouts R. Giotto uses following types functions specific purposes: - message() - Descriptive messages function (common) - cat() print() - Diagnostic outputs, usually comments previews data - warning() - function behavior potentially problematic, given context /inputs - stop() - Error messages","code":""},{"path":"https://drieslab.github.io/GiottoUtils/articles/print_formatting.html","id":"text-formatting","dir":"Articles","previous_headings":"","what":"Text Formatting","title":"Console Printing","text":"GiottoUtils::wrap_txt() can used format text wrap console size 100 char default - whichever less. New lines treated like “\\n” also applies indent lines first. function wrapped convenient print functions detailed . can also use sprintf formatting using wrap_txtf See base behavior Base functions console prints lack text wrapping. Linebreaks also require usage “\\n” formatted expected.","code":"library(GiottoUtils) cat(wrap_txt(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.              Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\")) ## Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ##  incididunt ut labore et dolore magna aliqua. ##  Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut ##  aliquip ex ea commodo consequat. wrap_txtf(\"%s morning\", \"good\") ## [1] \"good morning\" # Code formatting causes \"    \" to be added the next line cat(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.     Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\") ## Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ##     Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. # Using \\n instead cat(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\\nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\") ## Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ## Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."},{"path":"https://drieslab.github.io/GiottoUtils/articles/print_formatting.html","id":"messages","dir":"Articles","previous_headings":"","what":"Messages","title":"Console Printing","text":"Giotto primarily uses messages write helpful console prints. Whenever function message print, also encourage adding verbose param can turned . standard implementation looks like . GiottoUtils v0.1.1 introduces vmsg() simplifies single function without preceding statement. also applies text wrapping. Note verbose default NULL implementation since vmsg() checks default using \"giotto.verbose\" option can set globally.","code":"test_fun1 <- function(verbose = TRUE) {     if (verbose) message(\"hello world\") }  test_fun1() ## hello world test_fun2 <- function(verbose = NULL) {     vmsg(.v = verbose, \"hello world\") }  test_fun2() ## hello world"},{"path":"https://drieslab.github.io/GiottoUtils/articles/print_formatting.html","id":"debug-messages","dir":"Articles","previous_headings":"Messages","what":"Debug messages","title":"Console Printing","text":"vmsg() also provides modes prints. debugging purposes, can helpful include abstract wordy printouts messages every successful step. can included flagging \"debug\"","code":"test_debug <- function(verbose = NULL) {     vmsg(.v = verbose, .is_debug = TRUE, \"this is a debug statement\")     vmsg(.v = verbose, \"this is a normal message\") }  test_debug(verbose = TRUE) ## this is a normal message test_debug(verbose = \"debug\") ## this is a debug statement ## this is a normal message"},{"path":"https://drieslab.github.io/GiottoUtils/articles/print_formatting.html","id":"logging-messages","dir":"Articles","previous_headings":"Messages","what":"Logging messages","title":"Console Printing","text":"cases record messages helpful, preferred nothing actually printed console, vmsg() also supports writing logfile. can done passing either \"log\" \"log_debug\" desired level verbosity verbose param \"giotto.verbose\" option. logfile defaults created tempdir(), can set directory choice using \"giotto.logdir\" option. specific path logfile stored within \"giotto.last_logpath\". read log items, use giottoReadLog(). can start new logfile using giottoNewLog()","code":"vmsg(.v = \"log\", \"Write this to a logfile in tempdir\") ## Logging to:/tmp/Rtmpu77SzW/giotto_20241104_1.txt giottoReadLog() ## [1] \" (2024-11-04 17:37:21) Write this to a logfile in tempdir\""},{"path":"https://drieslab.github.io/GiottoUtils/articles/print_formatting.html","id":"errors","dir":"Articles","previous_headings":"","what":"Errors","title":"Console Printing","text":"modularization Giotto v4.0.0, can hard find module specific error came . .gstop() error handling internal function within modules seeks solve . function pre-pend module error happened . also provides .n param allows developers specify many stackframes back error reported .","code":"foo <- function(x, y) {     GiottoUtils:::.gstop(\"This is an error.\") }  bar <- function() {     foo(1, 2) }  bar() ## Error: [GiottoUtils] foo(1, 2): ##  This is an error. foo <- function(x, y) {     GiottoUtils:::.gstop(\"This is an error.\", .n = 2) # report from one stackframe back }  bar() ## Error: [GiottoUtils] bar(): ##  This is an error. sessionInfo() ## R version 4.4.2 (2024-10-31) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.5 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] GiottoUtils_0.2.1 BiocStyle_2.34.0  ##  ## loaded via a namespace (and not attached): ##  [1] cli_3.6.3           knitr_1.48          rlang_1.1.4         ##  [4] xfun_0.49           textshaping_0.4.0   data.table_1.16.2   ##  [7] gtools_3.9.5        jsonlite_1.8.9      backports_1.5.0     ## [10] htmltools_0.5.8.1   ragg_1.3.3          sass_0.4.9          ## [13] rmarkdown_2.28      evaluate_1.0.1      jquerylib_0.1.4     ## [16] fastmap_1.2.0       yaml_2.3.10         lifecycle_1.0.4     ## [19] bookdown_0.41       BiocManager_1.30.25 compiler_4.4.2      ## [22] fs_1.6.5            systemfonts_1.1.0   digest_0.6.37       ## [25] R6_2.5.1            parallel_4.4.2      magrittr_2.0.3      ## [28] bslib_0.8.0         checkmate_2.3.2     tools_4.4.2         ## [31] pkgdown_2.1.1       cachem_1.1.0        desc_1.4.3"},{"path":"https://drieslab.github.io/GiottoUtils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ruben Dries. Author, maintainer. Jiaji George Chen. Author. Joselyn C. Chávez-Fuentes. Author. Guo-Cheng Yuan. Author. Matthew O'Brien. Author. Edward Ruiz. Author.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dries R, George Chen J, Chávez-Fuentes J, Yuan G, O'Brien M, Ruiz E (2024). GiottoUtils: Giotto Suite Utilities. R package version 0.2.1, https://github.com/drieslab/Giotto, https://drieslab.github.io/GiottoUtils/, https://drieslab.github.io/Giotto/.","code":"@Manual{,   title = {GiottoUtils: Giotto Suite Utilities},   author = {Ruben Dries and Jiaji {George Chen} and Joselyn C. Chávez-Fuentes and Guo-Cheng Yuan and Matthew O'Brien and Edward Ruiz},   year = {2024},   note = {R package version 0.2.1, https://github.com/drieslab/Giotto, https://drieslab.github.io/GiottoUtils/},   url = {https://drieslab.github.io/Giotto/}, }"},{"path":"https://drieslab.github.io/GiottoUtils/index.html","id":"giottoutils-","dir":"","previous_headings":"","what":"Giotto Suite Utilities","title":"Giotto Suite Utilities","text":"GiottoUtils exports functionalities called internally many packages Giotto ecosystem. range things commonly used imports pretty prints. helpful install utility rest suite modules also provided. See suite_install()","code":""},{"path":"https://drieslab.github.io/GiottoUtils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Giotto Suite Utilities","text":"can install GiottoUtils like: also version GiottoUtils locked R version 4.4.0 can installed following:","code":"if (!requireNamespace(\"pak\", quietly = TRUE)) install.packages(\"pak\") pak::pak(\"drieslab/GiottoUtils\") if (!requireNamespace(\"remotes\", quietly = TRUE)) install.packages(\"remotes\") remotes::install_github(\"drieslab/GiottoUtils@R4.4.0\")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/check_github_suite_ver.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for updates to Giotto Suite — check_github_suite_ver","title":"Check for updates to Giotto Suite — check_github_suite_ver","text":"Checks Giotto Suite github repository compares version number currently installed.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/check_github_suite_ver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for updates to Giotto Suite — check_github_suite_ver","text":"","code":"check_github_suite_ver(pkg = \"Giotto\")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/check_github_suite_ver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for updates to Giotto Suite — check_github_suite_ver","text":"pkg character. Package check (pattern matches)","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/check_github_suite_ver.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for updates to Giotto Suite — check_github_suite_ver","text":"Message indicating new version available, otherwise returns NULL","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/check_github_suite_ver.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for updates to Giotto Suite — check_github_suite_ver","text":"","code":"check_github_suite_ver(\"GiottoUtils\")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/color_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Colorize print text — color_tag","title":"Colorize print text — color_tag","text":"Return list 8 formatting tags ansi colored text","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/color_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colorize print text — color_tag","text":"","code":"color_tag()  color_red(x)  color_green(x)  color_yellow(x)  color_blue(x)  color_purple(x)  color_teal(x)  use_color_text()  ansi_colors()  is_emacs_with_color()  emacs_version()"},{"path":"https://drieslab.github.io/GiottoUtils/reference/color_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colorize print text — color_tag","text":"x text color","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/color_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colorize print text — color_tag","text":"named list characters","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/color_tag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Colorize print text — color_tag","text":"supported colors checking modified cli aab-num-ansi-colors.R","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/color_tag.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Colorize print text — color_tag","text":"use_color_text(): Determine system print color ansi_colors(): Determine system can print least 8 colors is_emacs_with_color(): Determine emacs can print color emacs_version(): Determine emacs version","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/color_tag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colorize print text — color_tag","text":"","code":"color_tag() #> $r #> [1] \"\\033[31m\" #>  #> $g #> [1] \"\\033[32m\" #>  #> $y #> [1] \"\\033[33m\" #>  #> $b #> [1] \"\\033[34m\" #>  #> $p #> [1] \"\\033[35m\" #>  #> $t #> [1] \"\\033[36m\" #>  #> $x #> [1] \"\\033[39m\" #>   color_red(\"My text\") #> [1] \"\\033[31mMy text\\033[39m\"  color_green(\"My text\") #> [1] \"\\033[32mMy text\\033[39m\"  color_yellow(\"My text\") #> [1] \"\\033[33mMy text\\033[39m\"  color_blue(\"My text\") #> [1] \"\\033[34mMy text\\033[39m\"  color_purple(\"My text\") #> [1] \"\\033[35mMy text\\033[39m\"  color_teal(\"My text\") #> [1] \"\\033[36mMy text\\033[39m\"  use_color_text() #> [1] TRUE  ansi_colors() #> [1] 256  is_emacs_with_color() #> [1] FALSE  emacs_version() #> [1] NA"},{"path":"https://drieslab.github.io/GiottoUtils/reference/degrees.html","id":null,"dir":"Reference","previous_headings":"","what":"Radian/degree conversions — degrees","title":"Radian/degree conversions — degrees","text":"Convert radians degrees vice versa","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/degrees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radian/degree conversions — degrees","text":"","code":"radians(deg)  degrees(rad)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/degrees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Radian/degree conversions — degrees","text":"deg degrees rad radians","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/degrees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Radian/degree conversions — degrees","text":"numeric","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/degrees.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Radian/degree conversions — degrees","text":"radians(): Degrees radians degrees(): Radians degrees","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/degrees.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Radian/degree conversions — degrees","text":"","code":"radians(180) #> [1] 3.141593 degrees(pi) #> [1] 180"},{"path":"https://drieslab.github.io/GiottoUtils/reference/deprecate_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecate a parameter — deprecate_param","title":"Deprecate a parameter — deprecate_param","text":"Accepts directly passed deprecated superceding params Sends deprecation message deprecated param used. function wraps lifecycle::deprecate_warn() make standard param deprecation message. outputs final value used.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/deprecate_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecate a parameter — deprecate_param","text":"","code":"deprecate_param(   x,   y,   fun,   when,   check = c(\"deprecated\", \"null\"),   always = FALSE )"},{"path":"https://drieslab.github.io/GiottoUtils/reference/deprecate_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecate a parameter — deprecate_param","text":"x name. Deprecated param y name. Superceding param fun character. Name function character. Version number deprecation happened. check character. Method check deprecated param used always FALSE, default, warn every 8 hours. TRUE, always warn direct usages. Indirect usages keep warning every 8 hours avoid disrupting users fix issue. use always = TRUE least one release default.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/deprecate_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecate a parameter — deprecate_param","text":"final value used","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/deprecate_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deprecate a parameter — deprecate_param","text":"","code":"foo <- function(dep = deprecated(), sup = 10) {     sup <- deprecate_param(         dep, sup,         fun = \"foo\", when = \"0.0.1\"     )     return(sup) }  foo() # following defaults, no deprecation message #> [1] 10 foo(sup = 3) # no deprecation message triggered #> [1] 3 foo(dep = 3) # deprecation message triggered #> Warning: The `dep` argument of `foo()` is deprecated as of <NA> 0.0.1. #> ℹ Please use the `sup` argument instead. #> ℹ The deprecated feature was likely used in the base package. #>   Please report the issue to the authors. #> [1] 3  # convenient nested function when deprecating multiple params bar <- function(dep1 = deprecated(),     dep2 = deprecated(),     sup1 = 10,     sup2 = 20) {     # internally defined function that streamlines downstream deprecations     .dep <- function(...) {         deprecate_param(..., fun = \"bar\", when = \"0.0.2\")     }      sup1 <- .dep(dep1, sup1)     sup2 <- .dep(dep2, sup2)      return(list(sup1, sup2)) }  bar(sup1 = 100) #> [[1]] #> [1] 100 #>  #> [[2]] #> [1] 20 #>  bar(dep1 = 100, dep2 = \"hello\") #> Warning: The `dep1` argument of `bar()` is deprecated as of <NA> 0.0.2. #> ℹ Please use the `sup1` argument instead. #> Warning: The `dep2` argument of `bar()` is deprecated as of <NA> 0.0.2. #> ℹ Please use the `sup2` argument instead. #> [[1]] #> [1] 100 #>  #> [[2]] #> [1] \"hello\" #>"},{"path":"https://drieslab.github.io/GiottoUtils/reference/depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Find depth of subnesting — depth","title":"Find depth of subnesting — depth","text":"Recursively determines many max min layers subnesting , end object (defined param sig list length 0) layer 0","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find depth of subnesting — depth","text":"","code":"depth(this, method = c(\"max\", \"min\"), sig = \"data.frame\")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find depth of subnesting — depth","text":"object evaluate method max (default) min nesting detect sig signature class check . Default 'data.frame'","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find depth of subnesting — depth","text":"numeric","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/depth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find depth of subnesting — depth","text":"https://stackoverflow.com/questions/13432863/","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find depth of subnesting — depth","text":"","code":"x <- list(a = 1) depth(x) #> [1] 1"},{"path":"https://drieslab.github.io/GiottoUtils/reference/determine_cores.html","id":null,"dir":"Reference","previous_headings":"","what":"determine_cores — determine_cores","title":"determine_cores — determine_cores","text":"guesses many cores use","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/determine_cores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"determine_cores — determine_cores","text":"","code":"determine_cores(   cores = getOption(\"giotto.cores\", default = NA),   min_cores = 1,   max_cores = 10 )"},{"path":"https://drieslab.github.io/GiottoUtils/reference/determine_cores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"determine_cores — determine_cores","text":"numeric","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/determine_cores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"determine_cores — determine_cores","text":"","code":"determine_cores() #> [1] 2"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dir_manifest.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate file manifest list from a directory — dir_manifest","title":"Generate file manifest list from a directory — dir_manifest","text":"Create list full filepaths (character) named respective [basename()]. Allows easy $ exploration indexing items. params directly passed [list.files()] except full.names. [list.files()] also normally returns actual files directories recursive = FALSE, function specifically tests items existing files directories file_test(op = -f) fully obeys flag cases.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dir_manifest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate file manifest list from a directory — dir_manifest","text":"","code":"dir_manifest(   path = \".\",   pattern = NULL,   all.files = FALSE,   recursive = FALSE,   ignore.case = FALSE,   include.dirs = FALSE,   no.. = FALSE,   as.list = TRUE )"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dir_manifest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate file manifest list from a directory — dir_manifest","text":"path character vector full path names; default corresponds working directory, [getwd()]. Tilde expansion (see path.expand) normalizePath() performed. Missing values ignored. Elements marked encoding  converted native encoding (fails, considered non-existent). pattern optional regular expression. file names match regular expression returned. .files logical value. FALSE, names visible files returned (following Unix-style visibility, files whose name start dot). TRUE, file names returned. recursive logical. listing recurse directories? ignore.case logical. pattern-matching case-insensitive? include.dirs logical. subdirectory names included recursive listings? .. logical. \".\" \"..\" excluded also non-recursive listings? .list logical. output list named character vector","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dir_manifest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate file manifest list from a directory — dir_manifest","text":"full normalized filepaths named file basename either list (default) .list = FALSE, character vector.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dir_manifest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate file manifest list from a directory — dir_manifest","text":"","code":"dir_manifest() #> $check_github_suite_ver.html #> [1] \"/home/runner/work/GiottoUtils/GiottoUtils/docs/reference/check_github_suite_ver.html\" #>  #> $color_tag.html #> [1] \"/home/runner/work/GiottoUtils/GiottoUtils/docs/reference/color_tag.html\" #>  #> $degrees.html #> [1] \"/home/runner/work/GiottoUtils/GiottoUtils/docs/reference/degrees.html\" #>  #> $deprecate_param.html #> [1] \"/home/runner/work/GiottoUtils/GiottoUtils/docs/reference/deprecate_param.html\" #>  #> $depth.html #> [1] \"/home/runner/work/GiottoUtils/GiottoUtils/docs/reference/depth.html\" #>  #> $determine_cores.html #> [1] \"/home/runner/work/GiottoUtils/GiottoUtils/docs/reference/determine_cores.html\" #>  #> $index.html #> [1] \"/home/runner/work/GiottoUtils/GiottoUtils/docs/reference/index.html\" #>"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_conn.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a logfile connection — .log_conn","title":"Create a logfile connection — .log_conn","text":"Create active file connection object logfile write . Opens mode \"+\" allows appending reading.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_conn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a logfile connection — .log_conn","text":"","code":".log_conn(filepath = getOption(\"giotto.last_logpath\", NULL))"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_conn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a logfile connection — .log_conn","text":"filepath path logfile","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_conn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a logfile connection — .log_conn","text":"file connection","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a log file — .log_create","title":"Create a log file — .log_create","text":"Creates file called 'log.txt' specified directory. directory provided, defaults tempdir(), specific one can provided setting \"giotto.logdir\" option using .log_dir(). filepath additionally written option 'giotto.last_logpath'.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a log file — .log_create","text":"","code":".log_create(filedir = getOption(\"giotto.logdir\", tempdir()))"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a log file — .log_create","text":"filedir character. Directory create logfile","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a log file — .log_create","text":"file 'log.txt'","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Giotto logging directory — .log_dir","title":"Giotto logging directory — .log_dir","text":"Set Giotto logging directory. New logfiles generated .","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Giotto logging directory — .log_dir","text":"","code":".log_dir(logdir = tempdir())"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Giotto logging directory — .log_dir","text":"logdir character. Directory log (defaults tempdir)","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dot-log_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Giotto logging directory — .log_dir","text":"internal setting option giotto.logdir","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_dcast_string.html","id":null,"dir":"Reference","previous_headings":"","what":"dt_dcast_string — dt_dcast_string","title":"dt_dcast_string — dt_dcast_string","text":"Data.table dcast using character inputs formula","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_dcast_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dt_dcast_string — dt_dcast_string","text":"","code":"dt_dcast_string(data, col_name1, col_name2, value.var)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_dcast_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dt_dcast_string — dt_dcast_string","text":"data data.table col_name1 character. LHS cast formula col_name2 character. RHS cast formula value.var character. Name column whose values filled cast.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_dcast_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dt_dcast_string — dt_dcast_string","text":"keyed data.table cast","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_dcast_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dt_dcast_string — dt_dcast_string","text":"","code":"x <- data.table::data.table(     col1 = c(rep(\"a\", 3), rep(\"b\", 3)),     col2 = rep(LETTERS[1:3], 2),     value = c(1:6) ) force(x) #>      col1   col2 value #>    <char> <char> <int> #> 1:      a      A     1 #> 2:      a      B     2 #> 3:      a      C     3 #> 4:      b      A     4 #> 5:      b      B     5 #> 6:      b      C     6 y <- dt_dcast_string(x, \"col1\", \"col2\", \"value\") force(y) #> Key: <col1> #>      col1     A     B     C #>    <char> <int> <int> <int> #> 1:      a     1     2     3 #> 2:      b     4     5     6"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_remove_na.html","id":null,"dir":"Reference","previous_headings":"","what":"dt_remove_na — dt_remove_na","title":"dt_remove_na — dt_remove_na","text":"set NA values 0 data.table object","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_remove_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dt_remove_na — dt_remove_na","text":"","code":"dt_remove_na(DT)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_remove_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dt_remove_na — dt_remove_na","text":"DT datatable","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_remove_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dt_remove_na — dt_remove_na","text":"data.table","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_remove_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dt_remove_na — dt_remove_na","text":"","code":"x <- data.table::data.table(x = 1:3, y = c(1, NA, 2)) dt_remove_na(x) #>        x     y #>    <int> <num> #> 1:     1     1 #> 2:     2     0 #> 3:     3     2 x #>        x     y #>    <int> <num> #> 1:     1     1 #> 2:     2     0 #> 3:     3     2"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_set_row_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Set specific data.table row order — dt_set_row_order","title":"Set specific data.table row order — dt_set_row_order","text":"Set specific data.table row order","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_set_row_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set specific data.table row order — dt_set_row_order","text":"","code":"dt_set_row_order(x, neworder)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_set_row_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set specific data.table row order — dt_set_row_order","text":"x data.table neworder numerical vector reorder rows","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_set_row_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set specific data.table row order — dt_set_row_order","text":"data.table","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_set_row_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set specific data.table row order — dt_set_row_order","text":"","code":"x <- data.table::data.table(x = c(\"a\", \"b\", \"c\"), y = 1:3, z = 5:7) dt_set_row_order(x, neworder = c(1, 3, 2)) #>         x     y     z #>    <char> <int> <int> #> 1:      a     1     5 #> 2:      c     3     7 #> 3:      b     2     6 x #>         x     y     z #>    <char> <int> <int> #> 1:      a     1     5 #> 2:      c     3     7 #> 3:      b     2     6"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_sort_combine_two_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"dt_sort_combine_two_columns — dt_sort_combine_two_columns","title":"dt_sort_combine_two_columns — dt_sort_combine_two_columns","text":"fast sorting pasting 2 character columns data.table","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_sort_combine_two_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dt_sort_combine_two_columns — dt_sort_combine_two_columns","text":"","code":"dt_sort_combine_two_columns(DT, column1, column2, myname = \"unif_gene_gene\")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_sort_combine_two_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dt_sort_combine_two_columns — dt_sort_combine_two_columns","text":"DT datatable column1 column1 use column2 column2 use myname name combined column generate","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_sort_combine_two_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dt_sort_combine_two_columns — dt_sort_combine_two_columns","text":"data.table","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_sort_combine_two_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dt_sort_combine_two_columns — dt_sort_combine_two_columns","text":"","code":"x <- data.table::data.table(x = 1:3, y = 5:7) dt_sort_combine_two_columns(x, column1 = \"x\", column2 = \"y\") #>         x      y unif_gene_gene #>    <char> <char>         <char> #> 1:      1      5           1--5 #> 2:      2      6           2--6 #> 3:      3      7           3--7 x #>         x      y unif_gene_gene #>    <char> <char>         <char> #> 1:      1      5           1--5 #> 2:      2      6           2--6 #> 3:      3      7           3--7"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"dt_to_matrix — dt_to_matrix","title":"dt_to_matrix — dt_to_matrix","text":"converts data.table Matrix","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dt_to_matrix — dt_to_matrix","text":"","code":"dt_to_matrix(x, chunked = FALSE)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dt_to_matrix — dt_to_matrix","text":"x data.table object chunked logical. Whether chunk ingestion Matrix","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dt_to_matrix — dt_to_matrix","text":"Matrix","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_to_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dt_to_matrix — dt_to_matrix","text":"matrices large, Matrix::Matrix(x) (x, \"Matrix\") may throw Error: vector memory exhausted (limit reached?). get around , chunk conversion Matrix chunks roughly 2e+08 matrix cells.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/dt_to_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dt_to_matrix — dt_to_matrix","text":"","code":"x <- data.table::data.table(x = c(\"a\", \"b\", \"c\"), y = 1:3, z = 5:7) dt_to_matrix(x) #> 3 x 2 Matrix of class \"dgeMatrix\" #>   y z #> a 1 5 #> b 2 6 #> c 3 7 dt_to_matrix(x, chunked = TRUE) #> 3 x 2 Matrix of class \"dgeMatrix\" #>   y z #> a 1 5 #> b 2 6 #> c 3 7"},{"path":"https://drieslab.github.io/GiottoUtils/reference/file_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file extension — file_extension","title":"Get file extension — file_extension","text":"Get file extension provided filepath","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/file_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file extension — file_extension","text":"","code":"file_extension(file)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/file_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file extension — file_extension","text":"file character. Filepath","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/file_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file extension — file_extension","text":"character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/file_extension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get file extension — file_extension","text":"","code":"file_extension(\"my_file.txt\") #> [1] \"txt\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/fread_colmatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fread specific rows based on column matches — fread_colmatch","title":"Fread specific rows based on column matches — fread_colmatch","text":"Fread specific rows based column matches","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/fread_colmatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fread specific rows based on column matches — fread_colmatch","text":"","code":"fread_colmatch(file, col, sep = NULL, values_to_match, verbose = FALSE, ...)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/fread_colmatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fread specific rows based on column matches — fread_colmatch","text":"file path file load col name col match sep grep term match column delimiters within file values_to_match values col match given vector verbose whether print grep command ... additional parameters pass fread","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/fread_colmatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fread specific rows based on column matches — fread_colmatch","text":"data.table","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/fread_colmatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fread specific rows based on column matches — fread_colmatch","text":"","code":"if (FALSE) { # \\dontrun{ x <- data.frame(a = c(\"a\", \"b\", \"c\"), b = 1:3, c = 5:7) write.csv(x, \"my_file.csv\") fread_colmatch(\"my_file.csv\", col = \"a\", values_to_match = c(1, 3)) } # }"},{"path":"https://drieslab.github.io/GiottoUtils/reference/g_assert.html","id":null,"dir":"Reference","previous_headings":"","what":"Assertion framework — g_assert","title":"Assertion framework — g_assert","text":"Framework perform assertions provide informative errors input object test performed. Functions specific checks messages can built using base function.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/g_assert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assertion framework — g_assert","text":"","code":"g_assert(x, test, msg = NULL, n = 2L, ...)  assert_giotto(gobject, n = 1L, ...)  assert_dt(x, n = 2L)  assert_file(x, n = 2L)  assert_numeric(x, n = 2L)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/g_assert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assertion framework — g_assert","text":"x object test test test perform TRUE FALSE outcome msg error message provided character vector. Using token .name send name object tested stack frame referenced n n stack frames back evaluate param ... additional params pass gobject giotto object","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/g_assert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assertion framework — g_assert","text":"character message","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/g_assert.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Assertion framework — g_assert","text":"assert_giotto(): Test whether supplied object giotto object assert_dt(): Test whether input data.table object assert_file(): Test whether input existing file assert_numeric(): Test whether input class numeric","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/g_assert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assertion framework — g_assert","text":"","code":"x <- data.table::data.table(a = 1:3, b = 5:7) g_assert(     x,     test = inherits(x, \"data.table\"),     msg = c(.name, \"must be of class data.table, not\", class(x)),     n = 0 ) x <- data.table::data.table(x = 1:3, y = 1:3) assert_dt(x, n = 0)  write.table(data.frame(x = 1, y = 1), \"my_file.txt\") x <- \"my_file.txt\" assert_file(x, n = 0)  x <- 1 assert_numeric(x, n = 0)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/g_match_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Partial matching of character choices — g_match_arg","title":"Partial matching of character choices — g_match_arg","text":"Given arg match , tries partially match provided character vector choices. Matching ignores case returns first match.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/g_match_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partial matching of character choices — g_match_arg","text":"","code":"g_match_arg(arg, choices, ...)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/g_match_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partial matching of character choices — g_match_arg","text":"arg character. Argument match choices character vector choices match ... additional params passed grep","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/g_match_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partial matching of character choices — g_match_arg","text":"character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/g_match_arg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Partial matching of character choices — g_match_arg","text":"","code":"g_match_arg(\"raw\", choices = c(\"raw\", \"normalized\")) #> [1] \"raw\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/getDistinctColors.html","id":null,"dir":"Reference","previous_headings":"","what":"getDistinctColors — getDistinctColors","title":"getDistinctColors — getDistinctColors","text":"Returns number distinct colors based RGB scale. fewer 444 colors requested, colors returned order maximizes differences. 444 colors requested, recycled sampling available colors returned.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/getDistinctColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getDistinctColors — getDistinctColors","text":"","code":"getDistinctColors(n, seed = 1234)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/getDistinctColors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getDistinctColors — getDistinctColors","text":"n number colors wanted seed seed use randomizing color order. Default 1234","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/getDistinctColors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getDistinctColors — getDistinctColors","text":"character vector hexadecimal distinct colors","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/reference/getDistinctColors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"getDistinctColors — getDistinctColors","text":"","code":"getDistinctColors(500) #> Warning:  #>  not enough unique colors in R, maximum = 444  #>   [1] \"orange4\"           \"red2\"              \"tomato\"            #>   [4] \"darkseagreen1\"     \"deeppink3\"         \"steelblue2\"        #>   [7] \"gold1\"             \"wheat\"             \"tan4\"              #>  [10] \"springgreen2\"      \"darkred\"           \"darkseagreen3\"     #>  [13] \"lightskyblue\"      \"darkorange2\"       \"plum3\"             #>  [16] \"darkgoldenrod4\"    \"skyblue1\"          \"navajowhite3\"      #>  [19] \"snow1\"             \"lemonchiffon4\"     \"cornflowerblue\"    #>  [22] \"antiquewhite1\"     \"springgreen2\"      \"honeydew1\"         #>  [25] \"burlywood3\"        \"lightsalmon4\"      \"grey56\"            #>  [28] \"lightcyan4\"        \"darkorchid\"        \"dodgerblue4\"       #>  [31] \"springgreen3\"      \"cornsilk3\"         \"lavenderblush1\"    #>  [34] \"wheat2\"            \"slateblue3\"        \"paleturquoise3\"    #>  [37] \"deeppink\"          \"ghostwhite\"        \"rosybrown4\"        #>  [40] \"burlywood4\"        \"deepskyblue2\"      \"lightyellow3\"      #>  [43] \"powderblue\"        \"violet\"            \"palegreen2\"        #>  [46] \"palegreen3\"        \"mediumvioletred\"   \"deepskyblue4\"      #>  [49] \"darkgoldenrod4\"    \"lemonchiffon2\"     \"paleturquoise4\"    #>  [52] \"seagreen2\"         \"lemonchiffon4\"     \"palevioletred1\"    #>  [55] \"springgreen4\"      \"paleturquoise4\"    \"lightsteelblue1\"   #>  [58] \"lightsteelblue4\"   \"chartreuse2\"       \"peachpuff1\"        #>  [61] \"gold4\"             \"orange2\"           \"green3\"            #>  [64] \"firebrick\"         \"mistyrose3\"        \"magenta2\"          #>  [67] \"darkorchid3\"       \"bisque3\"           \"orchid1\"           #>  [70] \"palegreen1\"        \"lightsalmon\"       \"ghostwhite\"        #>  [73] \"rosybrown3\"        \"coral\"             \"aquamarine2\"       #>  [76] \"grey46\"            \"tomato\"            \"mediumorchid4\"     #>  [79] \"seashell4\"         \"hotpink\"           \"ghostwhite\"        #>  [82] \"darkolivegreen\"    \"darkgrey\"          \"mediumorchid1\"     #>  [85] \"mediumorchid4\"     \"lightskyblue4\"     \"lightskyblue1\"     #>  [88] \"plum3\"             \"olivedrab1\"        \"khaki1\"            #>  [91] \"cyan3\"             \"coral4\"            \"salmon2\"           #>  [94] \"grey6\"             \"plum3\"             \"snow2\"             #>  [97] \"hotpink2\"          \"powderblue\"        \"paleturquoise3\"    #> [100] \"coral3\"            \"brown4\"            \"skyblue4\"          #> [103] \"turquoise1\"        \"bisque\"            \"goldenrod\"         #> [106] \"firebrick3\"        \"indianred\"         \"pink1\"             #> [109] \"deepskyblue3\"      \"green3\"            \"darkseagreen2\"     #> [112] \"lightskyblue\"      \"peachpuff2\"        \"springgreen4\"      #> [115] \"darkolivegreen2\"   \"darkolivegreen2\"   \"indianred2\"        #> [118] \"darkgoldenrod2\"    \"azure4\"            \"firebrick3\"        #> [121] \"mistyrose1\"        \"grey76\"            \"gainsboro\"         #> [124] \"lemonchiffon1\"     \"navajowhite\"       \"peachpuff4\"        #> [127] \"seagreen\"          \"ivory\"             \"lightyellow3\"      #> [130] \"olivedrab2\"        \"wheat4\"            \"darkseagreen2\"     #> [133] \"gold2\"             \"mistyrose4\"        \"whitesmoke\"        #> [136] \"bisque\"            \"mediumpurple\"      \"bisque3\"           #> [139] \"yellow2\"           \"burlywood3\"        \"blue3\"             #> [142] \"seashell4\"         \"lightblue\"         \"tan4\"              #> [145] \"orchid4\"           \"darkorange\"        \"indianred\"         #> [148] \"seashell2\"         \"plum3\"             \"thistle2\"          #> [151] \"skyblue4\"          \"red1\"              \"darkolivegreen3\"   #> [154] \"green\"             \"tomato1\"           \"grey96\"            #> [157] \"thistle2\"          \"greenyellow\"       \"cyan3\"             #> [160] \"slateblue3\"        \"lightblue3\"        \"yellow4\"           #> [163] \"slateblue3\"        \"sandybrown\"        \"blue\"              #> [166] \"tan4\"              \"bisque3\"           \"lightskyblue1\"     #> [169] \"blue2\"             \"salmon4\"           \"darkseagreen1\"     #> [172] \"yellow4\"           \"thistle4\"          \"wheat3\"            #> [175] \"violetred2\"        \"palegreen\"         \"plum\"              #> [178] \"powderblue\"        \"greenyellow\"       \"lightblue4\"        #> [181] \"slateblue1\"        \"lightgoldenrod\"    \"slateblue\"         #> [184] \"darkolivegreen1\"   \"darkolivegreen\"    \"mediumpurple1\"     #> [187] \"salmon2\"           \"azure4\"            \"orange1\"           #> [190] \"ivory\"             \"springgreen\"       \"seagreen1\"         #> [193] \"lavenderblush1\"    \"yellow3\"           \"blue4\"             #> [196] \"aquamarine2\"       \"bisque3\"           \"grey66\"            #> [199] \"chartreuse2\"       \"royalblue1\"        \"darkgreen\"         #> [202] \"darkblue\"          \"honeydew\"          \"aquamarine4\"       #> [205] \"orchid3\"           \"red3\"              \"lightcyan4\"        #> [208] \"paleturquoise2\"    \"darkolivegreen3\"   \"ivory3\"            #> [211] \"red4\"              \"salmon\"            \"greenyellow\"       #> [214] \"green4\"            \"tomato1\"           \"darkviolet\"        #> [217] \"maroon3\"           \"blueviolet\"        \"antiquewhite3\"     #> [220] \"mistyrose2\"        \"powderblue\"        \"antiquewhite1\"     #> [223] \"cadetblue1\"        \"lightblue4\"        \"tan3\"              #> [226] \"thistle\"           \"khaki3\"            \"burlywood2\"        #> [229] \"palegreen2\"        \"lightskyblue2\"     \"magenta3\"          #> [232] \"orchid1\"           \"coral1\"            \"thistle1\"          #> [235] \"steelblue4\"        \"lemonchiffon4\"     \"lightyellow\"       #> [238] \"steelblue1\"        \"bisque3\"           \"khaki2\"            #> [241] \"seagreen1\"         \"skyblue1\"          \"darkgoldenrod1\"    #> [244] \"cornsilk\"          \"khaki2\"            \"honeydew\"          #> [247] \"violetred\"         \"coral4\"            \"skyblue3\"          #> [250] \"cyan2\"             \"coral2\"            \"ghostwhite\"        #> [253] \"orchid2\"           \"lightpink\"         \"lightyellow2\"      #> [256] \"mediumblue\"        \"turquoise2\"        \"cornsilk2\"         #> [259] \"blue4\"             \"grey66\"            \"yellow\"            #> [262] \"coral4\"            \"aquamarine2\"       \"thistle4\"          #> [265] \"tan1\"              \"lightpink1\"        \"orangered\"         #> [268] \"darkorchid2\"       \"orangered4\"        \"yellow1\"           #> [271] \"moccasin\"          \"lightpink2\"        \"darkseagreen4\"     #> [274] \"lightsalmon2\"      \"indianred1\"        \"cornsilk3\"         #> [277] \"darkorange\"        \"seagreen2\"         \"darkorange1\"       #> [280] \"palevioletred3\"    \"green\"             \"orchid4\"           #> [283] \"violetred4\"        \"lightpink\"         \"indianred2\"        #> [286] \"yellow2\"           \"peachpuff4\"        \"lightsteelblue\"    #> [289] \"seashell\"          \"grey16\"            \"deepskyblue3\"      #> [292] \"violetred\"         \"azure2\"            \"mediumseagreen\"    #> [295] \"lightseagreen\"     \"orchid\"            \"orange1\"           #> [298] \"lavenderblush4\"    \"yellow\"            \"darkviolet\"        #> [301] \"deepskyblue2\"      \"ivory2\"            \"slateblue1\"        #> [304] \"lightcyan3\"        \"limegreen\"         \"springgreen3\"      #> [307] \"snow1\"             \"darkolivegreen4\"   \"seashell4\"         #> [310] \"slateblue2\"        \"grey16\"            \"violetred4\"        #> [313] \"papayawhip\"        \"hotpink2\"          \"ivory3\"            #> [316] \"lightpink4\"        \"lightskyblue\"      \"darkslateblue\"     #> [319] \"darkgoldenrod\"     \"orange\"            \"grey56\"            #> [322] \"springgreen3\"      \"mediumpurple2\"     \"linen\"             #> [325] \"chocolate\"         \"orchid4\"           \"darkseagreen1\"     #> [328] \"darkseagreen\"      \"tomato1\"           \"lightblue3\"        #> [331] \"goldenrod4\"        \"turquoise1\"        \"mediumvioletred\"   #> [334] \"slateblue3\"        \"slateblue3\"        \"brown4\"            #> [337] \"deepskyblue1\"      \"olivedrab1\"        \"seashell1\"         #> [340] \"springgreen\"       \"navyblue\"          \"lightgoldenrod\"    #> [343] \"darkolivegreen3\"   \"goldenrod1\"        \"royalblue\"         #> [346] \"lightsalmon3\"      \"yellow2\"           \"khaki1\"            #> [349] \"hotpink2\"          \"lightskyblue1\"     \"darkgoldenrod4\"    #> [352] \"blue4\"             \"grey86\"            \"rosybrown\"         #> [355] \"dodgerblue4\"       \"lightgreen\"        \"lightpink2\"        #> [358] \"violetred\"         \"plum3\"             \"lightblue3\"        #> [361] \"rosybrown3\"        \"darksalmon\"        \"skyblue\"           #> [364] \"slateblue4\"        \"darkorchid4\"       \"chartreuse2\"       #> [367] \"mediumaquamarine\"  \"lavenderblush1\"    \"paleturquoise2\"    #> [370] \"mintcream\"         \"lightblue3\"        \"green\"             #> [373] \"lavenderblush\"     \"green3\"            \"cadetblue\"         #> [376] \"yellow4\"           \"lemonchiffon3\"     \"royalblue3\"        #> [379] \"skyblue3\"          \"darkcyan\"          \"navyblue\"          #> [382] \"green\"             \"lightskyblue\"      \"dodgerblue\"        #> [385] \"navajowhite4\"      \"burlywood2\"        \"palevioletred3\"    #> [388] \"seagreen1\"         \"mediumpurple3\"     \"hotpink2\"          #> [391] \"palevioletred3\"    \"ivory3\"            \"tan1\"              #> [394] \"coral4\"            \"chocolate2\"        \"palevioletred2\"    #> [397] \"powderblue\"        \"maroon3\"           \"lawngreen\"         #> [400] \"sienna4\"           \"navy\"              \"darkgoldenrod1\"    #> [403] \"darkolivegreen4\"   \"lightsteelblue4\"   \"red1\"              #> [406] \"ivory1\"            \"azure\"             \"firebrick2\"        #> [409] \"azure1\"            \"burlywood4\"        \"greenyellow\"       #> [412] \"cornsilk1\"         \"brown1\"            \"mintcream\"         #> [415] \"tomato2\"           \"red\"               \"darkorchid2\"       #> [418] \"aquamarine2\"       \"slateblue\"         \"navajowhite2\"      #> [421] \"purple4\"           \"lightslateblue\"    \"magenta2\"          #> [424] \"mediumblue\"        \"tan3\"              \"chocolate1\"        #> [427] \"sienna1\"           \"seashell2\"         \"violetred3\"        #> [430] \"lightslateblue\"    \"chocolate2\"        \"firebrick\"         #> [433] \"lavenderblush3\"    \"snow2\"             \"navajowhite3\"      #> [436] \"green\"             \"pink1\"             \"oldlace\"           #> [439] \"mediumspringgreen\" \"lightskyblue\"      \"khaki\"             #> [442] \"goldenrod4\"        \"olivedrab1\"        \"darkorchid2\"       #> [445] \"lightcyan\"         \"purple2\"           \"midnightblue\"      #> [448] \"lemonchiffon2\"     \"blueviolet\"        \"whitesmoke\"        #> [451] \"darkcyan\"          \"khaki2\"            \"beige\"             #> [454] \"hotpink1\"          \"cornsilk4\"         \"mintcream\"         #> [457] \"sienna1\"           \"olivedrab2\"        \"lemonchiffon2\"     #> [460] \"brown2\"            \"green1\"            \"chartreuse3\"       #> [463] \"palevioletred3\"    \"ivory3\"            \"darkslateblue\"     #> [466] \"bisque\"            \"honeydew4\"         \"darkorchid1\"       #> [469] \"royalblue3\"        \"wheat2\"            \"salmon\"            #> [472] \"firebrick4\"        \"purple3\"           \"plum\"              #> [475] \"yellow3\"           \"lavenderblush3\"    \"blueviolet\"        #> [478] \"brown3\"            \"lightsalmon4\"      \"palevioletred2\"    #> [481] \"darkseagreen3\"     \"cyan\"              \"goldenrod4\"        #> [484] \"lightsalmon\"       \"salmon1\"           \"chartreuse2\"       #> [487] \"aquamarine3\"       \"honeydew1\"         \"snow1\"             #> [490] \"darkgoldenrod4\"    \"saddlebrown\"       \"lightsalmon2\"      #> [493] \"lightgoldenrod3\"   \"lightcyan3\"        \"seagreen1\"         #> [496] \"palevioletred4\"    \"bisque\"            \"lightskyblue4\"     #> [499] \"darkslateblue\"     \"palegoldenrod\"     getDistinctColors(500, seed = 1) #> Warning:  #>  not enough unique colors in R, maximum = 444  #>   [1] \"plum1\"                \"ivory4\"               \"forestgreen\"          #>   [4] \"violetred1\"           \"palegreen3\"           \"navajowhite3\"         #>   [7] \"lightblue2\"           \"palevioletred1\"       \"darkolivegreen2\"      #>  [10] \"olivedrab2\"           \"seashell1\"            \"grey36\"               #>  [13] \"purple1\"              \"mistyrose2\"           \"purple\"               #>  [16] \"darkgoldenrod4\"       \"lightseagreen\"        \"burlywood\"            #>  [19] \"darkslateblue\"        \"lightskyblue3\"        \"sienna\"               #>  [22] \"ivory2\"               \"orchid\"               \"seashell1\"            #>  [25] \"snow1\"                \"darkorange1\"          \"yellow\"               #>  [28] \"orangered4\"           \"rosybrown1\"           \"violetred2\"           #>  [31] \"plum3\"                \"purple1\"              \"cadetblue\"            #>  [34] \"wheat\"                \"deeppink3\"            \"thistle3\"             #>  [37] \"turquoise1\"           \"bisque1\"              \"cadetblue2\"           #>  [40] \"slateblue1\"           \"rosybrown4\"           \"cyan2\"                #>  [43] \"dodgerblue3\"          \"burlywood3\"           \"khaki4\"               #>  [46] \"blanchedalmond\"       \"skyblue4\"             \"mediumorchid4\"        #>  [49] \"lightgoldenrod2\"      \"slateblue2\"           \"burlywood2\"           #>  [52] \"grey6\"                \"palegreen2\"           \"springgreen4\"         #>  [55] \"orange\"               \"indianred2\"           \"azure1\"               #>  [58] \"gainsboro\"            \"cadetblue3\"           \"thistle1\"             #>  [61] \"bisque3\"              \"lightpink3\"           \"limegreen\"            #>  [64] \"lightcyan2\"           \"skyblue\"              \"darkseagreen4\"        #>  [67] \"plum3\"                \"mediumslateblue\"      \"plum3\"                #>  [70] \"darkseagreen4\"        \"darkseagreen3\"        \"purple2\"              #>  [73] \"azure\"                \"palegreen\"            \"lightskyblue3\"        #>  [76] \"lavenderblush2\"       \"royalblue1\"           \"olivedrab4\"           #>  [79] \"deeppink2\"            \"darkolivegreen1\"      \"seagreen3\"            #>  [82] \"blue3\"                \"goldenrod4\"           \"mediumpurple3\"        #>  [85] \"tomato\"               \"lightsteelblue1\"      \"turquoise1\"           #>  [88] \"deeppink\"             \"paleturquoise3\"       \"brown1\"               #>  [91] \"cadetblue3\"           \"honeydew1\"            \"orangered2\"           #>  [94] \"darkseagreen2\"        \"green3\"               \"purple\"               #>  [97] \"rosybrown4\"           \"rosybrown\"            \"dodgerblue\"           #> [100] \"royalblue2\"           \"paleturquoise3\"       \"darkviolet\"           #> [103] \"cornsilk1\"            \"lightsteelblue4\"      \"darkseagreen3\"        #> [106] \"peachpuff4\"           \"chartreuse4\"          \"lightsteelblue1\"      #> [109] \"orchid\"               \"goldenrod1\"           \"forestgreen\"          #> [112] \"palegreen3\"           \"grey86\"               \"orange2\"              #> [115] \"green1\"               \"grey76\"               \"orangered\"            #> [118] \"tomato2\"              \"khaki2\"               \"chartreuse1\"          #> [121] \"lightpink1\"           \"palegoldenrod\"        \"black\"                #> [124] \"lemonchiffon1\"        \"lightskyblue\"         \"palegreen\"            #> [127] \"lightyellow\"          \"rosybrown\"            \"royalblue2\"           #> [130] \"ivory\"                \"cadetblue1\"           \"white\"                #> [133] \"blue3\"                \"darkgoldenrod3\"       \"tomato\"               #> [136] \"plum3\"                \"orange4\"              \"deepskyblue3\"         #> [139] \"magenta1\"             \"orchid3\"              \"coral4\"               #> [142] \"yellow2\"              \"sienna3\"              \"darkolivegreen3\"      #> [145] \"plum4\"                \"deeppink2\"            \"sandybrown\"           #> [148] \"palevioletred1\"       \"palegreen4\"           \"chartreuse2\"          #> [151] \"seashell\"             \"peachpuff4\"           \"mediumaquamarine\"     #> [154] \"grey56\"               \"mediumorchid2\"        \"paleturquoise4\"       #> [157] \"palevioletred\"        \"mediumorchid3\"        \"maroon2\"              #> [160] \"lightslateblue\"       \"gold3\"                \"deeppink3\"            #> [163] \"bisque1\"              \"slateblue1\"           \"tomato2\"              #> [166] \"chartreuse4\"          \"chocolate1\"           \"tan4\"                 #> [169] \"seagreen\"             \"gainsboro\"            \"paleturquoise3\"       #> [172] \"cornsilk2\"            \"palegreen4\"           \"seagreen3\"            #> [175] \"darkslateblue\"        \"firebrick1\"           \"darkgoldenrod2\"       #> [178] \"lightskyblue4\"        \"darkred\"              \"lightcyan3\"           #> [181] \"bisque\"               \"navyblue\"             \"violetred1\"           #> [184] \"blueviolet\"           \"violetred2\"           \"sandybrown\"           #> [187] \"lavenderblush\"        \"thistle2\"             \"maroon\"               #> [190] \"darkgoldenrod\"        \"azure3\"               \"burlywood3\"           #> [193] \"mistyrose4\"           \"palevioletred\"        \"darkorange4\"          #> [196] \"dodgerblue4\"          \"honeydew4\"            \"goldenrod1\"           #> [199] \"lightpink4\"           \"mediumpurple\"         \"indianred2\"           #> [202] \"lightyellow4\"         \"wheat1\"               \"violetred4\"           #> [205] \"goldenrod3\"           \"firebrick3\"           \"azure1\"               #> [208] \"deepskyblue3\"         \"azure3\"               \"navajowhite4\"         #> [211] \"gainsboro\"            \"cornsilk2\"            \"seagreen2\"            #> [214] \"navyblue\"             \"lightsalmon4\"         \"firebrick4\"           #> [217] \"gold1\"                \"burlywood4\"           \"seashell3\"            #> [220] \"turquoise4\"           \"skyblue2\"             \"powderblue\"           #> [223] \"brown4\"               \"paleturquoise4\"       \"palegreen1\"           #> [226] \"turquoise2\"           \"cornsilk1\"            \"forestgreen\"          #> [229] \"palevioletred3\"       \"lightsalmon4\"         \"seashell1\"            #> [232] \"grey66\"               \"royalblue\"            \"deepskyblue4\"         #> [235] \"palevioletred3\"       \"darkseagreen2\"        \"chartreuse3\"          #> [238] \"red2\"                 \"orangered1\"           \"mediumseagreen\"       #> [241] \"saddlebrown\"          \"springgreen\"          \"cyan4\"                #> [244] \"snow1\"                \"darkgoldenrod3\"       \"violetred3\"           #> [247] \"khaki\"                \"violetred4\"           \"powderblue\"           #> [250] \"grey56\"               \"deepskyblue3\"         \"seagreen\"             #> [253] \"deepskyblue\"          \"magenta2\"             \"dodgerblue3\"          #> [256] \"darkblue\"             \"blue1\"                \"burlywood4\"           #> [259] \"azure2\"               \"grey66\"               \"orchid4\"              #> [262] \"cornflowerblue\"       \"springgreen4\"         \"gold\"                 #> [265] \"brown3\"               \"snow\"                 \"sandybrown\"           #> [268] \"darkgoldenrod2\"       \"darkslateblue\"        \"lightblue\"            #> [271] \"plum4\"                \"hotpink\"              \"blueviolet\"           #> [274] \"burlywood\"            \"mediumslateblue\"      \"linen\"                #> [277] \"blue2\"                \"cornflowerblue\"       \"honeydew\"             #> [280] \"orangered\"            \"firebrick4\"           \"palegreen2\"           #> [283] \"coral3\"               \"orange4\"              \"red\"                  #> [286] \"blueviolet\"           \"navajowhite1\"         \"darkorchid\"           #> [289] \"red2\"                 \"palegreen4\"           \"lightgreen\"           #> [292] \"darkred\"              \"orange2\"              \"maroon4\"              #> [295] \"brown1\"               \"gold\"                 \"grey26\"               #> [298] \"deepskyblue4\"         \"darkolivegreen3\"      \"lightskyblue3\"        #> [301] \"orange\"               \"orchid3\"              \"deeppink\"             #> [304] \"navajowhite4\"         \"navajowhite3\"         \"maroon2\"              #> [307] \"lightsalmon1\"         \"red4\"                 \"darkorchid4\"          #> [310] \"lightsteelblue4\"      \"cyan4\"                \"chocolate1\"           #> [313] \"chocolate4\"           \"linen\"                \"lightgoldenrod3\"      #> [316] \"darkgrey\"             \"mediumspringgreen\"    \"lightgoldenrodyellow\" #> [319] \"thistle3\"             \"salmon4\"              \"seagreen1\"            #> [322] \"saddlebrown\"          \"darkgoldenrod\"        \"aliceblue\"            #> [325] \"deepskyblue3\"         \"ghostwhite\"           \"sienna1\"              #> [328] \"wheat\"                \"magenta1\"             \"navajowhite4\"         #> [331] \"hotpink3\"             \"grey46\"               \"lightgoldenrod1\"      #> [334] \"lightsteelblue\"       \"violetred4\"           \"palegreen3\"           #> [337] \"magenta3\"             \"white\"                \"lavender\"             #> [340] \"salmon3\"              \"darkolivegreen\"       \"tomato1\"              #> [343] \"plum1\"                \"lightsalmon\"          \"lightslateblue\"       #> [346] \"lightblue\"            \"darkseagreen3\"        \"snow2\"                #> [349] \"seagreen2\"            \"mediumpurple4\"        \"lemonchiffon\"         #> [352] \"indianred4\"           \"lightsteelblue1\"      \"ivory\"                #> [355] \"purple1\"              \"grey96\"               \"ivory4\"               #> [358] \"chartreuse2\"          \"lightcoral\"           \"indianred3\"           #> [361] \"orchid1\"              \"steelblue4\"           \"goldenrod4\"           #> [364] \"mediumorchid3\"        \"darkgrey\"             \"lightyellow4\"         #> [367] \"peachpuff4\"           \"royalblue2\"           \"royalblue2\"           #> [370] \"sienna2\"              \"wheat2\"               \"indianred4\"           #> [373] \"plum1\"                \"chocolate4\"           \"blanchedalmond\"       #> [376] \"wheat\"                \"darkkhaki\"            \"purple\"               #> [379] \"yellow1\"              \"lightsteelblue2\"      \"purple\"               #> [382] \"lightpink\"            \"tomato\"               \"darkseagreen4\"        #> [385] \"antiquewhite\"         \"lawngreen\"            \"greenyellow\"          #> [388] \"indianred3\"           \"snow3\"                \"grey16\"               #> [391] \"firebrick4\"           \"mintcream\"            \"lightpink2\"           #> [394] \"coral3\"               \"pink3\"                \"lemonchiffon1\"        #> [397] \"gold1\"                \"darkturquoise\"        \"yellow\"               #> [400] \"brown3\"               \"slateblue1\"           \"olivedrab4\"           #> [403] \"turquoise2\"           \"skyblue2\"             \"orchid1\"              #> [406] \"ivory1\"               \"skyblue4\"             \"darksalmon\"           #> [409] \"ivory\"                \"honeydew\"             \"honeydew2\"            #> [412] \"dodgerblue3\"          \"khaki1\"               \"darkolivegreen3\"      #> [415] \"deeppink\"             \"mediumslateblue\"      \"beige\"                #> [418] \"cadetblue2\"           \"wheat1\"               \"orangered\"            #> [421] \"darkorange3\"          \"ivory1\"               \"brown\"                #> [424] \"chartreuse4\"          \"dodgerblue1\"          \"lightyellow4\"         #> [427] \"chartreuse4\"          \"mediumorchid3\"        \"snow\"                 #> [430] \"grey16\"               \"darkorange1\"          \"thistle4\"             #> [433] \"bisque2\"              \"darkgoldenrod4\"       \"skyblue\"              #> [436] \"seagreen1\"            \"lightcyan1\"           \"red\"                  #> [439] \"cyan3\"                \"snow3\"                \"peachpuff3\"           #> [442] \"lightslateblue\"       \"royalblue2\"           \"turquoise3\"           #> [445] \"coral1\"               \"navajowhite4\"         \"deepskyblue1\"         #> [448] \"pink2\"                \"springgreen4\"         \"brown2\"               #> [451] \"olivedrab2\"           \"white\"                \"navyblue\"             #> [454] \"lightpink2\"           \"cornflowerblue\"       \"deepskyblue4\"         #> [457] \"paleturquoise\"        \"khaki\"                \"pink4\"                #> [460] \"burlywood4\"           \"dodgerblue3\"          \"steelblue1\"           #> [463] \"mediumorchid4\"        \"orange1\"              \"thistle3\"             #> [466] \"maroon1\"              \"dodgerblue4\"          \"lightsalmon4\"         #> [469] \"antiquewhite2\"        \"purple1\"              \"bisque1\"              #> [472] \"lemonchiffon3\"        \"chocolate4\"           \"darkgoldenrod4\"       #> [475] \"turquoise2\"           \"aliceblue\"            \"snow4\"                #> [478] \"peachpuff4\"           \"cyan1\"                \"coral1\"               #> [481] \"lightyellow4\"         \"palegreen\"            \"goldenrod4\"           #> [484] \"orange1\"              \"gold\"                 \"cadetblue\"            #> [487] \"firebrick\"            \"mediumaquamarine\"     \"gold1\"                #> [490] \"grey16\"               \"lightcyan2\"           \"orchid4\"              #> [493] \"maroon1\"              \"tan1\"                 \"mistyrose3\"           #> [496] \"lavenderblush3\"       \"darkolivegreen\"       \"yellow4\"              #> [499] \"paleturquoise2\"       \"darkorange4\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/getMonochromeColors.html","id":null,"dir":"Reference","previous_headings":"","what":"Create color scaling for a single color starting from black — getMonochromeColors","title":"Create color scaling for a single color starting from black — getMonochromeColors","text":"Create color scaling single color starting black","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/getMonochromeColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create color scaling for a single color starting from black — getMonochromeColors","text":"","code":"getMonochromeColors(col, n = 256L, ...)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/getMonochromeColors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create color scaling for a single color starting from black — getMonochromeColors","text":"col hexadecimal color scale scale towards n number colors request monochrome palette ... Arguments passed grDevices::colorRampPalette","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/getMonochromeColors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create color scaling for a single color starting from black — getMonochromeColors","text":"character vector","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/reference/getMonochromeColors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create color scaling for a single color starting from black — getMonochromeColors","text":"","code":"getMonochromeColors(\"green\", n = 100) #>   [1] \"#000000\" \"#000200\" \"#000500\" \"#000700\" \"#000A00\" \"#000C00\" \"#000F00\" #>   [8] \"#001200\" \"#001400\" \"#001700\" \"#001900\" \"#001C00\" \"#001E00\" \"#002100\" #>  [15] \"#002400\" \"#002600\" \"#002900\" \"#002B00\" \"#002E00\" \"#003000\" \"#003300\" #>  [22] \"#003600\" \"#003800\" \"#003B00\" \"#003D00\" \"#004000\" \"#004200\" \"#004500\" #>  [29] \"#004800\" \"#004A00\" \"#004D00\" \"#004F00\" \"#005200\" \"#005500\" \"#005700\" #>  [36] \"#005A00\" \"#005C00\" \"#005F00\" \"#006100\" \"#006400\" \"#006700\" \"#006900\" #>  [43] \"#006C00\" \"#006E00\" \"#007100\" \"#007300\" \"#007600\" \"#007900\" \"#007B00\" #>  [50] \"#007E00\" \"#008000\" \"#008300\" \"#008500\" \"#008800\" \"#008B00\" \"#008D00\" #>  [57] \"#009000\" \"#009200\" \"#009500\" \"#009700\" \"#009A00\" \"#009D00\" \"#009F00\" #>  [64] \"#00A200\" \"#00A400\" \"#00A700\" \"#00AA00\" \"#00AC00\" \"#00AF00\" \"#00B100\" #>  [71] \"#00B400\" \"#00B600\" \"#00B900\" \"#00BC00\" \"#00BE00\" \"#00C100\" \"#00C300\" #>  [78] \"#00C600\" \"#00C800\" \"#00CB00\" \"#00CE00\" \"#00D000\" \"#00D300\" \"#00D500\" #>  [85] \"#00D800\" \"#00DA00\" \"#00DD00\" \"#00E000\" \"#00E200\" \"#00E500\" \"#00E700\" #>  [92] \"#00EA00\" \"#00EC00\" \"#00EF00\" \"#00F200\" \"#00F400\" \"#00F700\" \"#00F900\" #>  [99] \"#00FC00\" \"#00FF00\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/getRainbowColors.html","id":null,"dir":"Reference","previous_headings":"","what":"getRainbowColors — getRainbowColors","title":"getRainbowColors — getRainbowColors","text":"Returns number rainbow colors spaced around spectrum. 100 unique colors supplied recycled.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/getRainbowColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getRainbowColors — getRainbowColors","text":"","code":"getRainbowColors(n)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/getRainbowColors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getRainbowColors — getRainbowColors","text":"n number colors wanted","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/getRainbowColors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getRainbowColors — getRainbowColors","text":"character vector hexadecimal rainbow colors","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/reference/getRainbowColors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"getRainbowColors — getRainbowColors","text":"","code":"getRainbowColors(100) #>   [1] \"#FF0099\" \"#FF00A5\" \"#FF00B2\" \"#FF00BE\" \"#FF00CA\" \"#FF00D7\" \"#FF00E3\" #>   [8] \"#FF00F0\" \"#FF00FC\" \"#F600FF\" \"#E900FF\" \"#DD00FF\" \"#D100FF\" \"#C400FF\" #>  [15] \"#B800FF\" \"#AC00FF\" \"#9F00FF\" \"#9300FF\" \"#8600FF\" \"#7A00FF\" \"#6E00FF\" #>  [22] \"#6100FF\" \"#5500FF\" \"#4900FF\" \"#3C00FF\" \"#3000FF\" \"#2400FF\" \"#1700FF\" #>  [29] \"#0B00FF\" \"#0002FF\" \"#000EFF\" \"#001AFF\" \"#0027FF\" \"#0033FF\" \"#003FFF\" #>  [36] \"#004CFF\" \"#0058FF\" \"#0064FF\" \"#0071FF\" \"#007DFF\" \"#008AFF\" \"#0096FF\" #>  [43] \"#00A2FF\" \"#00AFFF\" \"#00BBFF\" \"#00C7FF\" \"#00D4FF\" \"#00E0FF\" \"#00ECFF\" #>  [50] \"#00F9FF\" \"#00FFF9\" \"#00FFEC\" \"#00FFE0\" \"#00FFD4\" \"#00FFC7\" \"#00FFBB\" #>  [57] \"#00FFAF\" \"#00FFA2\" \"#00FF96\" \"#00FF8A\" \"#00FF7D\" \"#00FF71\" \"#00FF64\" #>  [64] \"#00FF58\" \"#00FF4C\" \"#00FF3F\" \"#00FF33\" \"#00FF27\" \"#00FF1A\" \"#00FF0E\" #>  [71] \"#00FF02\" \"#0BFF00\" \"#17FF00\" \"#24FF00\" \"#30FF00\" \"#3CFF00\" \"#49FF00\" #>  [78] \"#55FF00\" \"#61FF00\" \"#6EFF00\" \"#7AFF00\" \"#86FF00\" \"#93FF00\" \"#9FFF00\" #>  [85] \"#ACFF00\" \"#B8FF00\" \"#C4FF00\" \"#D1FF00\" \"#DDFF00\" \"#E9FF00\" \"#F6FF00\" #>  [92] \"#FFFC00\" \"#FFF000\" \"#FFE300\" \"#FFD700\" \"#FFCA00\" \"#FFBE00\" \"#FFB200\" #>  [99] \"#FFA500\" \"#FF9900\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/get_os.html","id":null,"dir":"Reference","previous_headings":"","what":"get_os — get_os","title":"get_os — get_os","text":"return type operating system, see https://conjugateprior.org/2015/06/identifying--os--r/","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/get_os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_os — get_os","text":"","code":"get_os()"},{"path":"https://drieslab.github.io/GiottoUtils/reference/get_os.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_os — get_os","text":"character osx, linux windows character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/get_os.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_os — get_os","text":"","code":"get_os() #> sysname  #> \"linux\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/giottoNewLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new Giotto log — giottoNewLog","title":"Create a new Giotto log — giottoNewLog","text":"Create new Giotto log","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/giottoNewLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new Giotto log — giottoNewLog","text":"","code":"giottoNewLog(logdir)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/giottoNewLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new Giotto log — giottoNewLog","text":"logdir (optional) specific directory generate logfiles. provided, choose directory based getOption(\"giotto.logdir\", tempdir())","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/giottoNewLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new Giotto log — giottoNewLog","text":"log file","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/giottoNewLog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new Giotto log — giottoNewLog","text":"","code":"giottoNewLog(\"my_log_directory\")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/giottoReadLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Read from the last generated log file — giottoReadLog","title":"Read from the last generated log file — giottoReadLog","text":"Read last generated log file","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/giottoReadLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read from the last generated log file — giottoReadLog","text":"","code":"giottoReadLog(filepath = getOption(\"giotto.last_logpath\", NULL))"},{"path":"https://drieslab.github.io/GiottoUtils/reference/giottoReadLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read from the last generated log file — giottoReadLog","text":"filepath character. filepath log file. omitted, tries find last created log (work crash)","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/giottoReadLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read from the last generated log file — giottoReadLog","text":"character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/giottoReadLog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read from the last generated log file — giottoReadLog","text":"","code":"log_write(x = \"my content\") giottoReadLog() #> [1] \" (2024-11-04 17:37:04) my content\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/gstop.html","id":null,"dir":"Reference","previous_headings":"","what":"Module-specific error message — gstop","title":"Module-specific error message — gstop","text":"Send error message formatted wrap_txt(). Prepends Giotto module error triggered. function used directly, instead internal .gstop() function created using framework module using . .n param incremented 2L wrapper function","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/gstop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Module-specific error message — gstop","text":"","code":"gstop(   ...,   sep = \" \",   strWidth = 100,   errWidth = FALSE,   .module,   .prefix = \" \",   .initial = \"\",   .n = 1L,   .call = TRUE,   .warn_nstack = getOption(\"giotto.warn_gstop_nstack\", FALSE) )"},{"path":"https://drieslab.github.io/GiottoUtils/reference/gstop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Module-specific error message — gstop","text":"... additional strings /elements pass wrap_msg sep join elements string (default one space) strWidth externally set wrapping width. (default value 100 effected) errWidth default = FALSE. Set strWidth compatible error printout .module character. Giotto module send error .prefix character. prefix later lines .initial character. prefix first line .n stack frames back error happened .call logical, whether include call selected .n location error . Default TRUE .warn_nstack logical. whether warn insufficient stackframes requested .n (default = FALSE)","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/gstop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Module-specific error message — gstop","text":"character message","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/gstop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Module-specific error message — gstop","text":"","code":"try(     gstop(\"My stop message\", .module = \"GiottoUtils\"),     silent = TRUE )"},{"path":"https://drieslab.github.io/GiottoUtils/reference/handle_warnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Warning handling — handle_warnings","title":"Warning handling — handle_warnings","text":"Utility gracefully handle expected warnings","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/handle_warnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warning handling — handle_warnings","text":"","code":"handle_warnings(expr)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/handle_warnings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warning handling — handle_warnings","text":"expr expression evaluate","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/handle_warnings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Warning handling — handle_warnings","text":"list \"result\" output expr \"warnings\" warnings generated eval.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/handle_warnings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Warning handling — handle_warnings","text":"","code":"f <- function() {     warning(\"this is a warning\")     return(TRUE) } handle_warnings(f()) #> $result #> [1] TRUE #>  #> $warnings #> [1] \"this is a warning\" #>"},{"path":"https://drieslab.github.io/GiottoUtils/reference/init_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize an option — init_option","title":"Initialize an option — init_option","text":"Set option exist yet.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/init_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize an option — init_option","text":"","code":"init_option(x, value)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/init_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize an option — init_option","text":"x character. Option initialize value value set","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/init_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize an option — init_option","text":"NULL invisibly","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/init_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize an option — init_option","text":"","code":"init_option(\"dummy_option\", 2) init_option(\"dummy_option\", 5) getOption(\"dummy_option\") # still 2 #> [1] 2"},{"path":"https://drieslab.github.io/GiottoUtils/reference/is_empty_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if missing or empty character — is_empty_char","title":"Test if missing or empty character — is_empty_char","text":"Convenient function test character input NULL, missing, length 0 (empty)","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/is_empty_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if missing or empty character — is_empty_char","text":"","code":"is_empty_char(x)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/is_empty_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if missing or empty character — is_empty_char","text":"x character vector test (may NULL contain NA values)","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/is_empty_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if missing or empty character — is_empty_char","text":"boolean","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/is_empty_char.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if missing or empty character — is_empty_char","text":"","code":"is_empty_char(NULL) #> [1] TRUE is_empty_char(rep(\"test\", 5)) #> [1] FALSE is_empty_char(c(character(4L), \"non-empty\")) # example with empty #>                                         non-empty  #>      TRUE      TRUE      TRUE      TRUE     FALSE  is_empty_char(c(NA_character_, \"non-na\")) # example with NA #>   <NA> non-na  #>   TRUE  FALSE"},{"path":"https://drieslab.github.io/GiottoUtils/reference/lapply_flex.html","id":null,"dir":"Reference","previous_headings":"","what":"lapply_flex — lapply_flex","title":"lapply_flex — lapply_flex","text":"lapply_flex","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/lapply_flex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lapply_flex — lapply_flex","text":"","code":"lapply_flex(X, FUN, cores = NA, future.seed = TRUE, fun = NULL, ...)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/lapply_flex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lapply_flex — lapply_flex","text":"X list use FUN function performed cores cores use future.seed whether set seed using future_lapply fun deprecated. Backwards compatibility FUN ... arguments pass","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/lapply_flex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lapply_flex — lapply_flex","text":"list","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/lapply_flex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lapply_flex — lapply_flex","text":"","code":"lapply_flex(list(x = 1, y = 2), FUN = log) #> $x #> [1] 0 #>  #> $y #> [1] 0.6931472 #>"},{"path":"https://drieslab.github.io/GiottoUtils/reference/lifecycle_badge.html","id":null,"dir":"Reference","previous_headings":"","what":"lifecycle badge — lifecycle_badge","title":"lifecycle badge — lifecycle_badge","text":"Generate markdown needed lifecycle badges help communicate stability functions documentation added backticks shown .","code":"#' `r lifecycle::badge(\"experimental\")`  #' `r lifecycle::badge(\"deprecated\")`  #' `r lifecycle::badge(\"superseded\")`"},{"path":"https://drieslab.github.io/GiottoUtils/reference/lifecycle_badge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lifecycle badge — lifecycle_badge","text":"","code":"lifecycle_badge(stage = \"stable\")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/lifecycle_badge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lifecycle badge — lifecycle_badge","text":"stage character. 'stable', 'experimental', 'deprecated', 'superseded'","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/lifecycle_badge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lifecycle badge — lifecycle_badge","text":"markdown","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/reference/lifecycle_badge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lifecycle badge — lifecycle_badge","text":"","code":"lifecycle_badge() #> [1] \"\\\\ifelse{html}{\\\\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\\\\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\\\\strong{[Stable]}}\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/list_element_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if list element exists — list_element_exists","title":"Test if list element exists — list_element_exists","text":"Test nth element list exists","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/list_element_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if list element exists — list_element_exists","text":"","code":"list_element_exists(x, index)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/list_element_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if list element exists — list_element_exists","text":"x list index element index","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/list_element_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if list element exists — list_element_exists","text":"boolean","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/list_element_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if list element exists — list_element_exists","text":"","code":"a <- list() length(a) <- 4 list_element_exists(a, 5) #> [1] FALSE list_element_exists(a, 4) #> [1] TRUE"},{"path":"https://drieslab.github.io/GiottoUtils/reference/local_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a seed local to a call — local_seed","title":"Set a seed local to a call — local_seed","text":"used inside call, local_seed() first records existing seed transiently sets specific one. call exits, recorded seed set , transient seed setting leaves effects. Based discussion https://support.bioconductor.org/p/110439/","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/local_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a seed local to a call — local_seed","text":"","code":"local_seed(seed)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/local_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a seed local to a call — local_seed","text":"seed seed value set","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/local_seed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a seed local to a call — local_seed","text":"set seed passed environment","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/local_seed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a seed local to a call — local_seed","text":"","code":"f <- function() {     local_seed(1234)     r_val <- rnorm(1)     return(r_val) }  rnorm(1) # make sure a seed exists (not needed but handy for this example) #> [1] 0.2553171  seed1 <- .Random.seed x <- f() seed2 <- .Random.seed y <- rnorm(1) seed3 <- .Random.seed z <- f()  identical(seed1, seed2) #> [1] TRUE !identical(seed1, seed3) #> [1] TRUE  identical(x, z) #> [1] TRUE !identical(x, y) #> [1] TRUE"},{"path":"https://drieslab.github.io/GiottoUtils/reference/log_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to log file — log_write","title":"Write to log file — log_write","text":"Write log file","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/log_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to log file — log_write","text":"","code":"log_write(file_conn = .log_conn(), x = \"\", collapse = \" \", main = NULL)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/log_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to log file — log_write","text":"file_conn file connection (Uses last created generates new one previous exist.) x character vector. Content write collapse character. Collapse use x main character. Title assign log entry","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/log_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write to log file — log_write","text":"character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/log_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write to log file — log_write","text":"","code":"log_write(x = \"my content\")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/melt_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Melt a matrix — melt_matrix","title":"Melt a matrix — melt_matrix","text":"Simple implementation melt matrices produces results similar reshape2's now deprecated.  param na.rm implemented.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/melt_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Melt a matrix — melt_matrix","text":"","code":"melt_matrix(data, varnames = NULL, ..., as.is = FALSE, value.name = \"value\")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/melt_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Melt a matrix — melt_matrix","text":"data matrix melt varnames variable names use molten data.table ... arguments passed methods .FALSE, dimnames converted factor integer etc appropriate. TRUE, left strings. value.name name variable used store values (default = \"value\")","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/melt_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Melt a matrix — melt_matrix","text":"data.table long format","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/melt_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Melt a matrix — melt_matrix","text":"","code":"set.seed(9) Data <- matrix(round(rnorm(12, 10, 4)), nrow = 4, ncol = 3) melt_matrix(Data) #>      Var1  Var2 value #>     <int> <int> <num> #>  1:     1     1     7 #>  2:     2     1     7 #>  3:     3     1     9 #>  4:     4     1     9 #>  5:     1     2    12 #>  6:     2     2     5 #>  7:     3     2    15 #>  8:     4     2    10 #>  9:     1     3     9 #> 10:     2     3     9 #> 11:     3     3    15 #> 12:     4     3     8"},{"path":"https://drieslab.github.io/GiottoUtils/reference/new_github_ver_avail.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a package has newer github version — new_github_ver_avail","title":"Check if a package has newer github version — new_github_ver_avail","text":"function works downloading DESCRIPTION file github repo comparing verison number provided value. download fails github version newer installed, silently returns NULL. github version newer, new version number returned","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/new_github_ver_avail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a package has newer github version — new_github_ver_avail","text":"","code":"new_github_ver_avail(url, current_ver = NULL)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/new_github_ver_avail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a package has newer github version — new_github_ver_avail","text":"url character. url package check's DESCRIPTION file. current_ver character. Current version check ","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/new_github_ver_avail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a package has newer github version — new_github_ver_avail","text":"character. Version number","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/new_github_ver_avail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a package has newer github version — new_github_ver_avail","text":"","code":"url <- \"https://raw.githubusercontent.com/drieslab/GiottoData/master/DESCRIPTION\" new_github_ver_avail(url, 0.2) #> [1] \"0.2.15\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/package_check.html","id":null,"dir":"Reference","previous_headings":"","what":"package_check — package_check","title":"package_check — package_check","text":"check package available provide installation instruction available. pip installations can accept github links. pip links, repo:link format always preferred especially since link used python package name check isntallation status .","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/package_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"package_check — package_check","text":"","code":"package_check(   pkg_name,   repository = NULL,   github_repo = NULL,   optional = FALSE,   custom_msg = NULL )"},{"path":"https://drieslab.github.io/GiottoUtils/reference/package_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"package_check — package_check","text":"pkg_name name package repository package (format repo:cooltool CRAN, Bioc, pip repos. format repo:johndoe/cooltool github bitbucket) github_repo name github repository needed optional whether package optional. TRUE, error thrown. FALSE, warning sent message() sent FALSE. custom_msg custom message sent instead default error message","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/package_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"package_check — package_check","text":"character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/package_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"package_check — package_check","text":"","code":"if (FALSE) { # \\dontrun{ package_check(\"Matrix\") package_check(\"BiocSingular\", repository = \"Bioc\") # (only expected to work when giottoenv is loaded) package_check(\"leidenalg\", repository = \"pip:leidenalg\")  # expected to fail package_check(\"faketool\") package_check(\"faketool\", repository = \"Bioc\") package_check(\"installme\", repository = \"pip:installme\")  # vectorized package_check(     pkg_name = c(\"faketool\", \"cooltool\"),     repository = c(\"CRAN\", \"github:johndoe/cooltool\") )  # github pip checks package_check(     pkg_name = \"pysodb\",     repository =         \"pip:git+https://github.com/TencentAILabHealthcare/pysodb.git\" ) } # }"},{"path":"https://drieslab.github.io/GiottoUtils/reference/pbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a progressr progress tracker. — pbar","title":"Create a progressr progress tracker. — pbar","text":"Create progressr progress tracker. wrapper around progressr::progressor().","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/pbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a progressr progress tracker. — pbar","text":"","code":"pbar(   steps = length(along),   along = NULL,   offset = 0L,   scale = 1L,   transform = function(steps) scale * steps + offset,   message = character(0L),   label = NA_character_,   trace = FALSE,   initiate = TRUE,   auto_finish = TRUE,   on_exit = !identical(envir, globalenv()),   enable = getOption(\"progressr.enable\", TRUE),   envir = parent.frame() )"},{"path":"https://drieslab.github.io/GiottoUtils/reference/pbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a progressr progress tracker. — pbar","text":"steps (integer) Number progressing steps. along (vector; alternative) Alternative sets steps = length(along). offset, scale (integer; optional) scale offset applying transform steps <- scale * steps + offset. transform (function; optional) function takes effective number steps input returns another finite non-negative number steps. message (character vector function) character vector, pasted together single string using empty separator. function, message constructed conditionMessage(p) calling function progression condition p first argument. label (character) label. trace (logical) TRUE, call stack recorded, otherwise . initiate (logical) TRUE, progressor signal progression 'initiate' condition created. auto_finish (logical) TRUE, progressor signal progression 'finish' condition soon last step reached. on_exit, envir (logical) TRUE, created progressor signal progression 'finish' condition calling frame exits. ignored calling frame (envir) global environment. enable (logical) TRUE, progression conditions signaled calling progressor function created function. FALSE, progression conditions signaled progressor function empty function nothing.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/pbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a progressr progress tracker. — pbar","text":"progressr progressor function","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/reference/pbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a progressr progress tracker. — pbar","text":"","code":"a <- function(x = 10) {     pb <- pbar(steps = x) }  a <- function(x = seq_len(10)) {     pb <- pbar(along = x) }"},{"path":"https://drieslab.github.io/GiottoUtils/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"See magrittr::%>% for details. — %>%","title":"See magrittr::%>% for details. — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See magrittr::%>% for details. — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://drieslab.github.io/GiottoUtils/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See magrittr::%>% for details. — %>%","text":"pipe operator","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"See magrittr::%>% for details. — %>%","text":"","code":"x <- \"a\" x %>% print() #> [1] \"a\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/prev_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Previous calls — prev_call","title":"Previous calls — prev_call","text":"Functions check call stack get aspects previous calls. Used putting together object histories error handling.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/prev_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Previous calls — prev_call","text":"","code":"get_prev_call(toplevel = 1L)  get_prev_fname(toplevel = 3L)  get_args(toplevel = 2L, verbose = FALSE)  get_args_list(toplevel = 1L, keep = NULL, ...)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/prev_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Previous calls — prev_call","text":"toplevel integer. Relative stack function call made. verbose verbose keep character. NULL, params captured. NULL, specifies params capture. ... additional params capture","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/prev_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Previous calls — prev_call","text":"character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/prev_call.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Previous calls — prev_call","text":"get_prev_call(): Get previous call get_prev_fname(): Get previous call function name get_args(): Get previous call args named character vector get_args_list(): Get call args named list","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/prev_call.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Previous calls — prev_call","text":"","code":"get_prev_call() #> [1] \"eval(expr, envir)\"  get_prev_fname(1) #> [1] \"eval\" a <- function(x = 1, y = 2, ...) {     get_args_list(...) }  a(z = 3, keep = \"y\") #> $y #> [1] 2 #>  #> $z #> [1] 3 #>"},{"path":"https://drieslab.github.io/GiottoUtils/reference/print_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty print formatting for lists and vectors — print_list","title":"Pretty print formatting for lists and vectors — print_list","text":"Pretty print formatting lists vectors","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/print_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty print formatting for lists and vectors — print_list","text":"","code":"print_list(x, pre = \"\")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/print_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty print formatting for lists and vectors — print_list","text":"x list items print. entries must named .character() methods pre character. Optional characters place head line","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/print_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pretty print formatting for lists and vectors — print_list","text":"lists vectors","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/print_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pretty print formatting for lists and vectors — print_list","text":"","code":"print_list(list()) #> <empty> #>  print_list(c()) #> <empty> #>   testvec <- seq(3) names(testvec) <- LETTERS[seq(3)] print_list(testvec) #> A : 1 #> B : 2 #> C : 3  test <- list(     name1 = \"1\",     longername2 = \"test_char\",     thirdname = factor(\"this will be converted with as.character()\") ) print_list(test) #> name1       : 1 #> longername2 : test_char #> thirdname   : this will be converted with as.character() print_list(test, pre = \"* \") #> * name1       : 1 #> * longername2 : test_char #> * thirdname   : this will be converted with as.character()"},{"path":"https://drieslab.github.io/GiottoUtils/reference/py_active_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Active python environment — py_active_env","title":"Active python environment — py_active_env","text":"Check active python environment without initialization. none initialized, FALSE returned. initialized environment found, env name based reticulate::conda_list() returned","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/py_active_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Active python environment — py_active_env","text":"","code":"py_active_env()"},{"path":"https://drieslab.github.io/GiottoUtils/reference/py_active_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Active python environment — py_active_env","text":"boolean","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/py_active_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Active python environment — py_active_env","text":"","code":"py_active_env #> function ()  #> { #>     name <- python <- NULL #>     if (!reticulate::py_available()) { #>         options(giotto.py_active_env = FALSE) #>         return(FALSE) #>     } #>     env_cache <- getOption(\"giotto.py_active_env\", FALSE) #>     if (is.character(env_cache)) { #>         return(env_cache) #>     } #>     py_conf <- reticulate::py_config() #>     py_path <- py_conf$python #>     py_ver <- py_conf$version #>     py_tab <- data.table::setDT(reticulate::conda_list()) #>     py_name <- py_tab[dirname(python) == dirname(py_path), name] #>     if (length(py_name) == 0)  #>         py_name <- py_path #>     options(giotto.py_active_env = py_name) #>     options(giotto.py_active_ver = py_ver) #>     return(py_name) #> } #> <bytecode: 0x55c2ad52f4b8> #> <environment: namespace:GiottoUtils>"},{"path":"https://drieslab.github.io/GiottoUtils/reference/random_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a random seed — random_seed","title":"Set a random seed — random_seed","text":"reproducible package, set.randomseed() Convenient function applying random seed. Usually used .exit() specified seed applied non-random operations interfere aspects user's work. May also called set.seed = TRUE simply return random seed use, without actually applied .","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/random_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a random seed — random_seed","text":"","code":"random_seed(set.seed = TRUE)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/random_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a random seed — random_seed","text":"set.seed Whether apply random seed. Defaults TRUE","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/random_seed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a random seed — random_seed","text":"seed value returned invisibly","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/random_seed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a random seed — random_seed","text":"","code":"random_seed()"},{"path":"https://drieslab.github.io/GiottoUtils/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. gtools mixedorder, mixedsort jsonlite fromJSON, read_json lifecycle deprecate_soft, deprecate_stop, deprecate_warn, deprecated, is_present","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"argument marked deprecated boolean NULL, invisibly. NULL, invisibly. NULL, invisibly. sorted vector vector giving sort order input elements","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"jsoncars <- jsonlite::toJSON(mtcars, pretty=TRUE) fromJSON(jsoncars) #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2"},{"path":"https://drieslab.github.io/GiottoUtils/reference/require_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to AT LEAST specified nesting depth — require_depth","title":"Coerce to AT LEAST specified nesting depth — require_depth","text":"Coerce LEAST specified nesting depth","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/require_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to AT LEAST specified nesting depth — require_depth","text":"","code":"require_depth(x, dnames = NULL, min_depth = 1L, count = 1L)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/require_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to AT LEAST specified nesting depth — require_depth","text":"x object evaluate dnames character. vector names apply per depth level already named name entries match depth intended . NULL values min_depth required minimum nesting depth ignored. count use","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/require_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to AT LEAST specified nesting depth — require_depth","text":"list","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/require_depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to AT LEAST specified nesting depth — require_depth","text":"","code":"x <- list(a = 1) require_depth(x, min_depth = 2L) #> [[1]] #> [[1]]$a #> [1] 1 #>  #>"},{"path":"https://drieslab.github.io/GiottoUtils/reference/scipy_sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between Matrix and scipy sparse representations — scipy_sparse","title":"Convert between Matrix and scipy sparse representations — scipy_sparse","text":"Convert R Matrix sparse matrix representation python scipy sparse formats. Inspired implementation nmslibR. Currently compatible classes: to_scipy_sparse(): matrix, dgCMatrix, dgRMatrix, dgTMatrix from_scipy_sparse(): scipy.sparse._csr.csr_matrix, scipy.sparse._csc.csc_matrix","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/scipy_sparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between Matrix and scipy sparse representations — scipy_sparse","text":"","code":"to_scipy_sparse(x, format = c(\"C\", \"R\"), transpose = FALSE, ...)  from_scipy_sparse(x, format = c(\"C\", \"R\"), transpose = FALSE, ...)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/scipy_sparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between Matrix and scipy sparse representations — scipy_sparse","text":"x matrix-like object convert format character. Either \"C\" Compressed Sparse Column \"R\" Compressed Sparse Row matrix representations transpose whether transpose matrix. default FALSE ... additional params pass scipy.sparse.cs*_matrix() Matrix::sparseMatrix depending output desired.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/scipy_sparse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between Matrix and scipy sparse representations — scipy_sparse","text":"scipy Matrix sparse representation depending '' '' respectively","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/scipy_sparse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert between Matrix and scipy sparse representations — scipy_sparse","text":"","code":"# example data m <- matrix(data = 0L, nrow = 400, ncol = 300) m[sample(400, 100), sample(300, 100)] <- runif(100, max = 10) dgc <- Matrix::rsparsematrix(nrow = 400L, ncol = 300L, density = 0.1)  # some conversions py_m_c <- to_scipy_sparse(m, format = \"C\") #> Error in py_module_import(module, convert = convert): ModuleNotFoundError: No module named 'scipy' #> Run `reticulate::py_last_error()` for details. py_m_r_t <- to_scipy_sparse(m, format = \"R\", transpose = TRUE) #> Error in py_module_import(module, convert = convert): ModuleNotFoundError: No module named 'scipy' #> Run `reticulate::py_last_error()` for details.  py_dgc_c <- to_scipy_sparse(dgc, format = \"C\") #> Error in py_module_import(module, convert = convert): ModuleNotFoundError: No module named 'scipy' #> Run `reticulate::py_last_error()` for details. py_dgc_r <- to_scipy_sparse(dgc, format = \"R\") #> Error in py_module_import(module, convert = convert): ModuleNotFoundError: No module named 'scipy' #> Run `reticulate::py_last_error()` for details.  dgc_revert <- from_scipy_sparse(py_dgc_c, format = \"C\") #> Error: object 'py_dgc_c' not found dgr_revert <- from_scipy_sparse(py_dgc_c, format = \"R\") #> Error: object 'py_dgc_c' not found identical(dgc, dgc_revert) #> Error: object 'dgc_revert' not found"},{"path":"https://drieslab.github.io/GiottoUtils/reference/set_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Set if — set_if","title":"Set if — set_if","text":"Set default value test true.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/set_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set if — set_if","text":"","code":"x %null% y  x %na% y  x %none% y"},{"path":"https://drieslab.github.io/GiottoUtils/reference/set_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set if — set_if","text":"x object test y default value set","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/set_if.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set if — set_if","text":"x tests TRUE, y returned x tests FALSE x returned","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/set_if.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set if — set_if","text":"","code":"NULL %null% 1 #> [1] 1 2 %null% 1 #> [1] 2  \"test\" %na% 10 #> [1] \"test\" NA_character_ %na% \"missing\" #> [1] \"missing\"  c() %none% 20 #> [1] 20 list() %none% \"a\" #> [1] \"a\" logical(5) %none% 10 #> [1] FALSE FALSE FALSE FALSE FALSE"},{"path":"https://drieslab.github.io/GiottoUtils/reference/special_characters.html","id":null,"dir":"Reference","previous_headings":"","what":"Special characters — special_characters","title":"Special characters — special_characters","text":"Framework functions printing special characters within R packages.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/special_characters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Special characters — special_characters","text":"","code":"is_latex_output()  is_utf8_output()  box_chars()"},{"path":"https://drieslab.github.io/GiottoUtils/reference/special_characters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Special characters — special_characters","text":"boolean","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/special_characters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Special characters — special_characters","text":"Much inspiration taken fs tree.R derived : code","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/special_characters.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Special characters — special_characters","text":"is_latex_output(): Determine print latex output is_utf8_output(): Determine system using UTF-8 encoding box_chars(): Helper function print unicode box characters using escape codes.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/special_characters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Special characters — special_characters","text":"","code":"is_latex_output() #> [1] FALSE  is_utf8_output() #> [1] TRUE  box_chars() #> $h #> [1] \"─\" #>  #> $v #> [1] \"│\" #>  #> $l #> [1] \"└\" #>  #> $j #> [1] \"├\" #>  #> $b #> [1] \"└──\" #>  #> $t #> [1] \"├──\" #>  #> $i #> [1] \"│  \" #>  #> $s #> [1] \"   \" #>"},{"path":"https://drieslab.github.io/GiottoUtils/reference/str_convenience.html","id":null,"dir":"Reference","previous_headings":"","what":"String convenience functions — str_convenience","title":"String convenience functions — str_convenience","text":"String convenience functions","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/str_convenience.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"String convenience functions — str_convenience","text":"","code":"str_vector(x, qchar = c(\"single\", \"double\"))  str_bracket(x)  str_parenth(x)  str_double_quote(x)  str_quote(x)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/str_convenience.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"String convenience functions — str_convenience","text":"x string item(s) format qchar quote character use. Either 'single' \"double\"","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/str_convenience.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"String convenience functions — str_convenience","text":"character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/str_convenience.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"String convenience functions — str_convenience","text":"","code":"x <- \"test\" cat(str_bracket(x), \"\\n\") #> [test]  cat(str_parenth(x), \"\\n\") #> (test)  cat(str_double_quote(x), \"\\n\") #> \"test\"  cat(str_quote(x), \"\\n\") #> 'test'   vec <- c(\"item1\", \"item2\", \"item3\") cat(str_vector(vec), \"\\n\") #> 'item1', 'item2', 'item3'  cat(str_vector(vec, qchar = \"double\")) #> \"item1\", \"item2\", \"item3\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/str_locate2.html","id":null,"dir":"Reference","previous_headings":"","what":"Find location of match in string — str_locate2","title":"Find location of match in string — str_locate2","text":"Implementation stringr's str_locate base R.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/str_locate2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find location of match in string — str_locate2","text":"","code":"str_locate2(string, pattern)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/str_locate2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find location of match in string — str_locate2","text":"string Input vector. Either character vector, something coercible one. pattern Pattern look .","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/str_locate2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find location of match in string — str_locate2","text":"integer matrix two columns one row element string. first column, start, gives position start match, second column, end, gives position end.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/str_locate2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find location of match in string — str_locate2","text":"","code":"fruit <- c(\"apple\", \"banana\", \"pear\", \"pineapple\") str_locate2(fruit, \"$\") #>      start end #> [1,]     6   5 #> [2,]     7   6 #> [3,]     5   4 #> [4,]    10   9 str_locate2(fruit, \"a\") #>      start end #> [1,]     1   1 #> [2,]     2   2 #> [3,]     3   3 #> [4,]     5   5 str_locate2(fruit, \"e\") #>      start end #> [1,]     5   5 #> [2,]    NA  NA #> [3,]     2   2 #> [4,]     4   4 str_locate2(fruit, c(\"a\", \"b\", \"p\", \"p\")) #>      start end #> [1,]     1   1 #> [2,]     1   1 #> [3,]     1   1 #> [4,]     1   1"},{"path":"https://drieslab.github.io/GiottoUtils/reference/suite_install.html","id":null,"dir":"Reference","previous_headings":"","what":"Giotto Suite GitHub Installation — suite_install","title":"Giotto Suite GitHub Installation — suite_install","text":"Installation convenience function. Helps Giotto Suite installation GitHub website ensuring modules installed correct order. Also automatically switches R4.4.0 version user R version lower 4.4.1. utility full reinstall specified Giotto Suite modules non-Suite dependencies never prompt updated.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/suite_install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Giotto Suite GitHub Installation — suite_install","text":"","code":"suite_install(modules = suite_packages(), suite_deps = TRUE, ref = \"main\", ...)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/suite_install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Giotto Suite GitHub Installation — suite_install","text":"modules character. modules install. Defaults core packages needed Giotto run. suite_deps logical. Whether install potential Giotto Suite dependency modules ref character. Currently one \"main\", \"R4.4.0\", \"dev\". determine branches install. See details. ... additional params pass remotes::install_github()","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/suite_install.html","id":"ref-main-","dir":"Reference","previous_headings":"","what":"ref \"main\"","title":"Giotto Suite GitHub Installation — suite_install","text":"Installs main Giotto version. version expected chase highest R version.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/suite_install.html","id":"ref-r-","dir":"Reference","previous_headings":"","what":"ref \"R4.4.0\"","title":"Giotto Suite GitHub Installation — suite_install","text":"Mirrors main branch, locks R version 4.4.0","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/suite_install.html","id":"ref-dev-","dir":"Reference","previous_headings":"","what":"ref \"dev\"","title":"Giotto Suite GitHub Installation — suite_install","text":"version ahead main version also chases latest R version.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/suite_install.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Giotto Suite GitHub Installation — suite_install","text":"","code":"if (FALSE) {     # install core packages     suite_install()     suite_install(\"GiottoClass\", ref = \"dev\")          # install ONLY Giotto, ignoring module dependencies      # (i.e. GiottoVisuals, GiottoClass, etc)     suite_install(\"Giotto\", suite_deps = FALSE) }"},{"path":"https://drieslab.github.io/GiottoUtils/reference/suite_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Giotto Suite Packages — suite_packages","title":"Giotto Suite Packages — suite_packages","text":"Returns character vector Giotto Suite's packages. core packages returned default.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/suite_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Giotto Suite Packages — suite_packages","text":"","code":"suite_packages(type = \"core\")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/suite_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Giotto Suite Packages — suite_packages","text":"type character. Type module return. Current choices \"core\" packages needed Giotto run, \"extensions\" extending packages GiottoData, \"\" current modules returned.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/suite_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Giotto Suite Packages — suite_packages","text":"","code":"suite_packages() #> [1] \"GiottoUtils\"   \"GiottoClass\"   \"GiottoVisuals\" \"Giotto\"        suite_packages(\"core\") #> [1] \"GiottoUtils\"   \"GiottoClass\"   \"GiottoVisuals\" \"Giotto\"        suite_packages(\"extensions\") #> [1] \"GiottoData\" \"GiottoDB\"   suite_packages(\"all\") #> [1] \"GiottoUtils\"   \"GiottoClass\"   \"GiottoVisuals\" \"Giotto\"        #> [5] \"GiottoData\"    \"GiottoDB\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/time_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Format time for printing — time_format","title":"Format time for printing — time_format","text":"Format time printing","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/time_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format time for printing — time_format","text":"","code":"time_format(secs)"},{"path":"https://drieslab.github.io/GiottoUtils/reference/time_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format time for printing — time_format","text":"secs numeric. seconds","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/time_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format time for printing — time_format","text":"character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/time_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format time for printing — time_format","text":"Code timetaken","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/time_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format time for printing — time_format","text":"","code":"time_format(90) #> [1] \"00:01:30\""},{"path":"https://drieslab.github.io/GiottoUtils/reference/vmsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Verbose message handler — vmsg","title":"Verbose message handler — vmsg","text":"Verbose message handler","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/vmsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verbose message handler — vmsg","text":"","code":"vmsg(   ...,   .v = NULL,   .is_debug = FALSE,   .vopt = getOption(\"giotto.verbose\", TRUE) )"},{"path":"https://drieslab.github.io/GiottoUtils/reference/vmsg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verbose message handler — vmsg","text":"... additional strings /elements pass wrap_msg .v verbose flag pass. check options .vopt NULL (default). param intended passing function-level verbose flags .is_debug flag debug print (prints .v .vopt 'debug') .vopt global verbosity option pull ","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/vmsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verbose message handler — vmsg","text":"character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/vmsg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verbose message handler — vmsg","text":"","code":"# common usage (.v is logical) vmsg(\"print me\", .v = TRUE) #> print me vmsg(\"dont print me\", .v = FALSE)  # debug messages (.v == \"debug\") # flag as a debug message using .is_debug = TRUE vmsg(\"I am a debug message\", .is_debug = TRUE, .v = TRUE) # no print vmsg(\"I am a debug message\", .is_debug = TRUE, .v = \"debug\") # prints #> I am a debug message  vmsg(\"print me\", .v = \"debug\") # also prints non-debug messages #> print me  # with global option options(\"giotto.verbose\" = TRUE) vmsg(\"Print by default\") #> Print by default  options(\"giotto.verbose\" = FALSE) vmsg(\"Do not print by default\") vmsg(\"Do not print by default\", .v = TRUE) #> Do not print by default # function level input overrides global option"},{"path":"https://drieslab.github.io/GiottoUtils/reference/with.html","id":null,"dir":"Reference","previous_headings":"","what":"With utilities — with","title":"With utilities — with","text":"Simple functions. Similar withr implementations.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/with.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"With utilities — with","text":"","code":"gwith_options(new, code)  gwith_package(package, code, pos = 2L)  gwith_seed(seed = 1234, code, ..., substitute = TRUE, envir = parent.frame())"},{"path":"https://drieslab.github.io/GiottoUtils/reference/with.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"With utilities — with","text":"new new option set value code R code execute temporary settings package character. name package pos integer. position search attach . Default = 2 ... additional params pass. See details. substitute TRUE, argument expr    substitute():ed, otherwise . envir environment expression evaluated.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/with.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"With utilities — with","text":"gwith_seed() : ... passes set.seed()","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/with.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"With utilities — with","text":"gwith_options(): Eval temporary option setting gwith_package(): Eval temporarily attached package gwith_seed(): Eval temporary specifiable seed","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/with.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"With utilities — with","text":"","code":"# options ################################### gwith_options(list(gutils.temp = \"found\"), {     print(getOption(\"gutils.temp\", default = \"not_found\")) }) #> [1] \"found\" getOption(\"gutils.temp\", default = \"not_found\") #> [1] \"not_found\"  # packages ################################## # temporarily attach at end of search (right before \"base\") gwith_package(\"data.table\", print(search()), pos = length(search())) #>  [1] \".GlobalEnv\"          \"package:GiottoUtils\" \"package:stats\"       #>  [4] \"package:graphics\"    \"package:grDevices\"   \"package:utils\"       #>  [7] \"package:datasets\"    \"package:methods\"     \"Autoloads\"           #> [10] \"package:data.table\"  \"package:base\"        search() #>  [1] \".GlobalEnv\"          \"package:GiottoUtils\" \"package:stats\"       #>  [4] \"package:graphics\"    \"package:grDevices\"   \"package:utils\"       #>  [7] \"package:datasets\"    \"package:methods\"     \"Autoloads\"           #> [10] \"package:base\"         # seed  ##################################### start_seed <- .Random.seed  # identical generation a <- gwith_seed(runif(10), seed = 1234) b <- gwith_seed(runif(10), seed = 1234) identical(a, b) #> [1] TRUE  # does not alter pre-existing seed end_seed <- .Random.seed identical(start_seed, end_seed) #> [1] TRUE"},{"path":"https://drieslab.github.io/GiottoUtils/reference/with_pbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Track progress while evaluating an R expression — with_pbar","title":"Track progress while evaluating an R expression — with_pbar","text":"Track progress evaluating R expression. wrapper around progressr::with_progress(). progressr useful handles progress reporting parallel contexts. However, worth noting Giotto adhere progressr's guideline with_progress() used within packages. default behavior displaying progress convenient end users packages many functions. implementation may shift time.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/with_pbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Track progress while evaluating an R expression — with_pbar","text":"","code":"with_pbar(   expr,   handlers = progressr::handlers(),   cleanup = TRUE,   delay_terminal = NULL,   delay_stdout = NULL,   delay_conditions = NULL,   interrupts = getOption(\"progressr.interrupts\", TRUE),   interval = NULL,   enable = NULL )"},{"path":"https://drieslab.github.io/GiottoUtils/reference/with_pbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Track progress while evaluating an R expression — with_pbar","text":"expr R expression evaluate. handlers progression handler list . NULL empty list, progress updates ignored. cleanup TRUE, progression handlers shutdown end regardless progression complete . delay_terminal TRUE, output conditions may end terminal delayed. delay_stdout TRUE, standard output captured relayed end just captured conditions relayed. delay_conditions character vector specifying base::condition classes captured relayed end captured standard output relayed. interrupts Controls whether interrupts detected . TRUE interrupt signaled, progress handlers asked report current amount progress evaluation terminated interrupt, e.g. user pressed Ctrl-C interactive session, batch process interrupted ran time. Note optional progress handler support . interval (numeric) minimum time (seconds) successive progression updates handlers. enable (logical) FALSE, progress reported.  default report progress interactive mode batch mode. See details.","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/with_pbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Track progress while evaluating an R expression — with_pbar","text":"result evaluated code","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/reference/with_pbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Track progress while evaluating an R expression — with_pbar","text":"","code":"a <- function(x = 10) {     with_pbar({         pb <- pbar(x)         for (i in seq_len(x)) {             Sys.sleep(0.1)             pb()         }     }) }  a()"},{"path":"https://drieslab.github.io/GiottoUtils/reference/wrap_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap message — wrap_msg","title":"Wrap message — wrap_msg","text":"Wrap message","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/wrap_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap message — wrap_msg","text":"","code":"wrap_msg(..., sep = \" \")"},{"path":"https://drieslab.github.io/GiottoUtils/reference/wrap_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap message — wrap_msg","text":"... additional strings /elements pass wrap_txt sep join elements string (default one space)","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/wrap_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap message — wrap_msg","text":"character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/wrap_msg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap message — wrap_msg","text":"","code":"wrap_msg(\"A message\") #> A message"},{"path":"https://drieslab.github.io/GiottoUtils/reference/wrap_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap text — wrap_txt","title":"Wrap text — wrap_txt","text":"Wrap text","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/wrap_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap text — wrap_txt","text":"","code":"wrap_txt(   ...,   sep = \" \",   strWidth = 100,   errWidth = FALSE,   .prefix = \" \",   .initial = \"\" )  wrap_txtf(   ...,   sep = \" \",   strWidth = 100,   errWidth = FALSE,   .prefix = \" \",   .initial = \"\" )"},{"path":"https://drieslab.github.io/GiottoUtils/reference/wrap_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap text — wrap_txt","text":"... additional params pass sep join elements string (default one space) strWidth externally set wrapping width. (default value 100 effected) errWidth default = FALSE. Set strWidth compatible error printout .prefix character. prefix later lines .initial character. prefix first line","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/wrap_txt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap text — wrap_txt","text":"character","code":""},{"path":"https://drieslab.github.io/GiottoUtils/reference/wrap_txt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap text — wrap_txt","text":"","code":"cat(wrap_txt(\"A text\")) #> A text cat(wrap_txt(     \"Newlines are obeyed.     The first line is not indented by default.     later lines are indented by default.      The text is also wrapped to either a default max width of 100 char     or the width of the console, whichever is smaller.      More than one item passed will be concatenated in the same way     that cat() does.\" )) #> Newlines are obeyed. #>  The first line is not indented by default. #>  later lines are indented by default. #>  #>  The text is also wrapped to either a default max width of 100 char #>  or the width of the console, whichever is smaller. #>  #>  More than one item passed will be concatenated in the same way #>  that cat() does.  cat(wrap_txtf(     \"This function works the same way as %s, but instead     of concatenating all elements in the way that %s usually     does, it uses %s formatting.\",     \"wrap_txt()\", \"cat()\", \"sprintf()\" )) #> This function works the same way as wrap_txt(), but instead #>  of concatenating all elements in the way that cat() usually #>  does, it uses sprintf() formatting."},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"new-0-2-1","dir":"Changelog","previous_headings":"","what":"New","title":"GiottoUtils 0.2.1 (2024/11/4)","text":"suite_packages() reporting names Giotto Suite modules suite_install() installing specific branches Giotto Suite","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"breaking-change-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking change","title":"GiottoUtils 0.2.0 (2024/10/26)","text":"R version requirement now 4.4.1","code":""},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"new-0-2-0","dir":"Changelog","previous_headings":"","what":"New","title":"GiottoUtils 0.2.0 (2024/10/26)","text":"gwith_package(), gwith_options(), gwith_seed() setting temporary conditions eval handle_warnings() graceful warning handling","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"new-0-1-12","dir":"Changelog","previous_headings":"","what":"New","title":"GiottoUtils 0.1.12 (2024/09/27)","text":"pbar() with_pbar() progress reporting utils. wrappers around progressr functionalities. reexports fromJSON() read_json() jsonlite. melt_matrix() emulate reshape2::melt.matrix() (deprecated package) use cases Giotto.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"new-0-1-11","dir":"Changelog","previous_headings":"","what":"New","title":"GiottoUtils 0.1.11 (2024/08/22)","text":"py_active_env() utility function detecting active python environment without initializing","code":""},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"enhancement-0-1-11","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"GiottoUtils 0.1.11 (2024/08/22)","text":"package_check() now works pip github installs package_check() now reports conda environment activated python version .","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"new-0-1-10","dir":"Changelog","previous_headings":"","what":"New","title":"GiottoUtils 0.1.10 (2024/07/26)","text":"dir_manifest() creating named list files within directory. Mostly wraps list.files()","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"new-0-1-9","dir":"Changelog","previous_headings":"","what":"New","title":"GiottoUtils 0.1.9 (2024/07/12)","text":"deprecate_param() utility function streamlining code print_list() pretty printing list-like objects from_scipy_sparse() conversion scipy csr csc Matrix dgCMatrix dgRMatrix","code":""},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"changes-0-1-9","dir":"Changelog","previous_headings":"","what":"Changes","title":"GiottoUtils 0.1.9 (2024/07/12)","text":"newer github version checking refactored new_github_ver_avail()","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"new-0-1-8","dir":"Changelog","previous_headings":"","what":"New","title":"GiottoUtils 0.1.8 (2024/05/22)","text":"wrap_txtf() variant wrap_txt() uses sprintf() formatting init_option() setting option exist","code":""},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"enhancement-0-1-8","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"GiottoUtils 0.1.8 (2024/05/22)","text":"dt_to_matrix() can now chunk conversion Matrix avoid memory issues get_args_list() now keep param allows selection collected args keep","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"new-0-1-6","dir":"Changelog","previous_headings":"","what":"New","title":"GiottoUtils 0.1.6 (2024/02/26)","text":"%null%, %na%, %none% infix operators setting default value object , respectively, NULL, NA, length 0. local_seed() transiently setting seed duration function","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"bug-fixes-0-1-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"GiottoUtils 0.1.5 (2024/02/11)","text":"str_locate2() now works vectorized inputs like stringr counterpart str_locate2() -matches now properly return NA_integer_ instead negative values","code":""},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"new-0-1-5","dir":"Changelog","previous_headings":"","what":"New","title":"GiottoUtils 0.1.5 (2024/02/11)","text":"to_scipy_sparse() conversion R matrices scipy sparse representations","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"enhancement-0-1-4","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"GiottoUtils 0.1.4 (2024/02/05)","text":"new seed param getDistinctColors() allows ordering distinct colors changed. package_check() now allows one package checked using repo:location notation.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"added-0-1-3","dir":"Changelog","previous_headings":"","what":"Added","title":"GiottoUtils 0.1.3","text":"Add: mixedsort() mixedorder() gtools","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"added-0-1-2","dir":"Changelog","previous_headings":"","what":"Added","title":"GiottoUtils 0.1.2 (2024/01/02)","text":"Add: getMonochromeColors() basic color palette function. Useful image colorization.","code":""},{"path":[]},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"breaking-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"GiottoUtils 0.1.1 (2023/12/16)","text":"Remove checkmate reexports Remove deprecated flex_lapply() Rename guard_against_notgiotto() assert_giotto() Rename set_row_order_dt() dt_set_row_order() Rename dcast_dt_string() dt_dcast_string() Rename sort_combine_two_DT_columns() dt_sort_combine_two_columns() Rename DT_removeNA() dt_remove_na() Rename assert_DT() assert_dt()","code":""},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"added-0-1-1","dir":"Changelog","previous_headings":"","what":"Added","title":"GiottoUtils 0.1.1 (2023/12/16)","text":"Add gstop() framework sending module specific error messages Add str_locate2() (implementation stringr::str_locate() base R) Add str_vector() pretty printing vector string Add: str_bracket(), str_parenth(), str_quote(), str_double_quote() convenience functions Move: get_prev_fname(), get_args(), get_prev_call() package Add get_prev_call() Move basic color palettes getDistinctColors() getRainbowColors() package Add: RColorBrewer suggests getDistinctColors()","code":""},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"GiottoUtils 0.1.1 (2023/12/16)","text":"improvements assert_giotto()","code":""},{"path":"https://drieslab.github.io/GiottoUtils/news/index.html","id":"giottoutils-010-20231129","dir":"Changelog","previous_headings":"","what":"GiottoUtils 0.1.0 (2023/11/29)","title":"GiottoUtils 0.1.0 (2023/11/29)","text":"Initial release","code":""}]
