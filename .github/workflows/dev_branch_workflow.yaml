name: Dev Branch Checks
on:
  push:
    branches: [ "dev" ]

permissions:
  contents: write
  packages: read

jobs:

  codecov:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/drieslab/ci-giottosuite/ci-env
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history and tags
      - name: catch R deps not in container
        run: devtools::install_deps()
        shell: Rscript {0}
      - name: Generate coverage report and upload
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            branch = "dev",
            type = c("tests", "examples", "vignettes"),
            combine_types = TRUE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
        shell: Rscript {0}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  rcmdcheck:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/drieslab/ci-giottosuite/ci-env
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history and tags
      - name: catch R deps not in container
        run: devtools::install_deps()
        shell: Rscript {0}
      - name: Check package
        run: |
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "error")
        shell: Rscript {0}

  bioccheck:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/drieslab/ci-giottosuite/ci-env
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history and tags
      - name: catch R deps not in container
        run: devtools::install_deps()
        shell: Rscript {0}
      - name: Build and install
        run: |
          R CMD build .
          R CMD INSTALL *.tar.gz
      - name: Run BiocCheck
        run: |
          BiocCheck::BiocCheck()
        shell: Rscript {0}

  lintr:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write
      packages: read
      actions: read
      security-events: write
    container:
      image: ghcr.io/drieslab/ci-giottosuite/ci-env
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history and tags
      - name: catch R deps not in container
        run: devtools::install_deps()
        shell: Rscript {0}
      - name: Run lintr
        run: |
          lintr::sarif_output(
            lintr::lint_package(
              ".",
              exclusions = list("tests", "vignettes", "pkgdown"), 
              linters = lintr::linters_with_defaults(
                indentation_linter = lintr::indentation_linter(indent = 4L),
                object_name_linter = lintr::object_name_linter(styles = c("camelCase", "symbols", "snake_case", "UPPERCASE"))
              )
            ),
            "lintr-results.sarif"
          )
        shell: Rscript {0}
        continue-on-error: true
      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: lintr-results.sarif
          wait-for-processing: true